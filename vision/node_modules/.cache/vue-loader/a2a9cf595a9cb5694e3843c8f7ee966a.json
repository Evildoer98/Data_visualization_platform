{"remainingRequest":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Seller.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Seller.vue","mtime":1616858168026},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\babel-loader\\lib\\index.js","mtime":1615108034142},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js","mtime":1615108060518}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgICBjaGFydEluc3RhbmNlOiBudWxsLCAvLyBjaGFydHPlrp7kvovlr7nosaENCiAgICAgIGFsbERhdGE6IFtdLCAvLyDmnI3liqHlmajov5Tlm57nmoTmlbDmja4NCiAgICAgIGN1cnJlbnRQYWdlOiAxLCAvLyDlvZPliY3mmL7npLrnmoTpobXmlbANCiAgICAgIHRvdGFsUGFnZTogMCwgLy8g5LiA5YWx5aSa5bCR6aG1DQogICAgICB0aW1lSWQ6IG51bGwgLy8g5a6a5pe25Zmo55qE5qCH6K+GDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcFN0YXRlKFsndGhlbWUnXSkNCiAgfSwNCiAgd2F0Y2g6IHsNCiAgICB0aGVtZSAoKSB7DQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2UuZGlzcG9zZSgpDQogICAgICB0aGlzLmluaXRDaGFydCgpDQogICAgICB0aGlzLnNjcmVlbkFkYXB0ZXIoKQ0KICAgICAgdGhpcy51cGRhdGVDaGFydCgpDQogICAgfQ0KICB9LA0KICBjcmVhdGVkICgpIHsNCiAgICAvLyDlnKjnu4Tku7bliJvlu7rlrozmiJDkuYvlkI7vvIzov5vooYzlm57osIPlh73mlbDnmoTms6jlhowNCiAgICB0aGlzLiRzb2NrZXQucmVnaXN0ZXJDYWxsQmFjaygnc2VsbGVyRGF0YScsIHRoaXMuZ2V0RGF0YSkNCiAgfSwNCiAgbW91bnRlZCAoKSB7DQogICAgdGhpcy5pbml0Q2hhcnQoKQ0KICAgIC8vIHRoaXMuZ2V0RGF0ZSgpDQogICAgdGhpcy4kc29ja2V0LnNlbmQoew0KICAgICAgYWN0aW9uOiAnZ2V0RGF0YScsDQogICAgICBzb2NrZXRUeXBlOiAnc2VsbGVyRGF0YScsDQogICAgICBjaGFyTmFtZTogJ3NlbGxlcicsDQogICAgICB2YWx1ZTogJycNCiAgICB9KQ0KICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpDQogICAgLy8g5Zyo6aG16Z2i5Yqg6L295a6M5oiQ55qE5pe25YCZ77yM5Li75Yqo6L+b6KGM5bGP5bmV55qE6YCC6YWNDQogICAgdGhpcy5zY3JlZW5BZGFwdGVyKCkNCiAgfSwNCiAgZGVzdHJveWVkICgpIHsNCiAgICBjbGVhckludGVydmFsKHRoaXMudGltZUlkKQ0KICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpDQogICAgdGhpcy4kc29ja2V0LnVuUmVnaXN0ZXJDYWxsQmFjaygnc2VsbGVyRGF0YScpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICAvLyDliJ3lp4vljJZlY2hhcnRzaW5zdGFuY2Xlr7nosaENCiAgICBpbml0Q2hhcnQgKCkgew0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuc2VsbGVyX3JlZiwgdGhpcy50aGVtZSkNCiAgICAgIC8vIOWvueWbvuihqOWIneWni+WMlumFjee9rueahOaOp+WItg0KICAgICAgY29uc3QgaW5pdE9wdGlvbiA9IHsNCiAgICAgICAgdGl0bGU6IHsNCiAgICAgICAgICB0ZXh0OiAn4pSDIOWVhuWutumUgOWUrue7n+iuoScsDQogICAgICAgICAgbGVmdDogMjAsDQogICAgICAgICAgdG9wOiAyMA0KICAgICAgICB9LA0KICAgICAgICBncmlkOiB7DQogICAgICAgICAgdG9wOiAnMjAlJywNCiAgICAgICAgICBsZWZ0OiAnMyUnLA0KICAgICAgICAgIHJpZ2h0OiAnNiUnLA0KICAgICAgICAgIGJvdHRvbTogJzMlJywNCiAgICAgICAgICBjb250YWluTGFiZWw6IHRydWUgLy8g6Led56a75piv5YyF5ZCr5Z2Q5qCH6L205LiK55qE5paH5a2XDQogICAgICAgIH0sDQogICAgICAgIHhBeGlzOiB7DQogICAgICAgICAgdHlwZTogJ3ZhbHVlJw0KICAgICAgICB9LA0KICAgICAgICB5QXhpczogew0KICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScNCiAgICAgICAgfSwNCiAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywNCiAgICAgICAgICBheGlzUG9pbnRlcjogew0KICAgICAgICAgICAgdHlwZTogJ2xpbmUnLA0KICAgICAgICAgICAgejogMCwNCiAgICAgICAgICAgIGxpbmVTdHlsZTogew0KICAgICAgICAgICAgICBjb2xvcjogJyMyRDM0NDMnDQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICB0eXBlOiAnYmFyJywNCiAgICAgICAgICAgIGxhYmVsOiB7DQogICAgICAgICAgICAgIHNob3c6IHRydWUsDQogICAgICAgICAgICAgIHBvc2l0b246ICdyaWdodCcsDQogICAgICAgICAgICAgIHRleHRTdHlsZTogew0KICAgICAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICBpdGVtU3R5bGU6IHsNCiAgICAgICAgICAgICAgLy8g5oyH5piO6aKc6Imy5riQ5Y+Y55qE5pa55ZCRDQogICAgICAgICAgICAgIC8vIOaMh+aYjuS4jeWQjOeZvuWIhuavlOS5i+S4i+minOiJsueahOWAvA0KICAgICAgICAgICAgICBjb2xvcjogbmV3IHRoaXMuJGVjaGFydHMuZ3JhcGhpYy5MaW5lYXJHcmFkaWVudCgwLCAwLCAxLCAwLCBbDQogICAgICAgICAgICAgICAgLy8g55m+5YiG5LmLMOeKtuaAgeS4i+eahOminOiJsuWAvA0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgIG9mZnNldDogMCwNCiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnIzUwNTJFRScNCiAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIHsNCiAgICAgICAgICAgICAgICAgIG9mZnNldDogMSwNCiAgICAgICAgICAgICAgICAgIGNvbG9yOiAnI0FCNkVFNScNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgIF0pDQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICBdDQogICAgICB9DQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGluaXRPcHRpb24pDQogICAgICAvLyDlr7nlm77ooajlr7nosaHov5vooYzpvKDmoIfkuovku7bnmoTnm5HlkKwNCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5vbignbW91c2VvdmVyJywgKCkgPT4gew0KICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZUlkKQ0KICAgICAgfSkNCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5vbignbW91c2VvdXQnLCAoKSA9PiB7DQogICAgICAgIHRoaXMuc3RhcnRJbnRlcnZhbCgpDQogICAgICB9KQ0KICAgIH0sDQoNCiAgICAvLyDojrflj5bmnI3liqHlmajnmoTmlbDmja4NCiAgICAvLyBhc3luYyBnZXREYXRlICgpIHsNCiAgICBnZXREYXRhIChyZXQpIHsNCiAgICAgIC8vIGh0dHA6Ly8xMjcuMC4wLjEvODg4OC9hcGkvc2VsbGVyDQogICAgICAvLyBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoJ3NlbGxlcicpDQogICAgICAvLyBjb25zb2xlLmxvZyhyZXMpDQogICAgICB0aGlzLmFsbERhdGEgPSByZXQNCiAgICAgIHRoaXMuYWxsRGF0YS5zb3J0KChhLCBiKSA9PiB7DQogICAgICAgIHJldHVybiBhLnZhbHVlIC0gYi52YWx1ZQ0KICAgICAgfSkNCiAgICAgIC8vIOavj+S6lOS4quWFg+e0oOaYvuekuuS4gOmhtQ0KICAgICAgdGhpcy50b3RhbFBhZ2UgPSB0aGlzLmFsbERhdGEubGVuZ3RoICUgNSA9PT0gMCA/IHRoaXMuYWxsRGF0YS5sZW5ndGggLyA1IDogdGhpcy5hbGxEYXRhLmxlbmd0aCAvIDUgKyAxDQogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCkNCiAgICAgIC8vIOWQr+WKqOWumuaXtuWZqA0KICAgICAgdGhpcy5zdGFydEludGVydmFsKCkNCiAgICB9LA0KDQogICAgLy8g5pu05paw5Zu+6KGoDQogICAgdXBkYXRlQ2hhcnQgKCkgew0KICAgICAgY29uc3Qgc3RhcnQgPSAodGhpcy5jdXJyZW50UGFnZSAtIDEpICogNSAvLyAwDQogICAgICBjb25zdCBlbmQgPSB0aGlzLmN1cnJlbnRQYWdlICogNSAvLyA1DQogICAgICBjb25zdCBzaG93RGF0YSA9IHRoaXMuYWxsRGF0YS5zbGljZShzdGFydCwgZW5kKQ0KICAgICAgLy8g5aSE55CG5pWw5o2u5bm25LiU5pu05paw55WM6Z2i5Zu+6KGoDQogICAgICBjb25zdCBzZWxsZXJOYW1lcyA9IHNob3dEYXRhLm1hcCgoaXRlbSkgPT4gew0KICAgICAgICByZXR1cm4gaXRlbS5uYW1lDQogICAgICB9KQ0KICAgICAgY29uc3Qgc2VsbGVyVmFsdWVzID0gc2hvd0RhdGEubWFwKChpdGVtKSA9PiB7DQogICAgICAgIHJldHVybiBpdGVtLnZhbHVlDQogICAgICB9KQ0KICAgICAgY29uc3QgZGF0YU9wdGlvbiA9IHsNCiAgICAgICAgeUF4aXM6IHsNCiAgICAgICAgICBkYXRhOiBzZWxsZXJOYW1lcw0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBkYXRhOiBzZWxsZXJWYWx1ZXMNCiAgICAgICAgICB9DQogICAgICAgIF0NCiAgICAgIH0NCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oZGF0YU9wdGlvbikNCiAgICB9LA0KICAgIHN0YXJ0SW50ZXJ2YWwgKCkgew0KICAgICAgaWYgKHRoaXMudGltZUlkKSB7DQogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lSWQpDQogICAgICB9DQogICAgICB0aGlzLnRpbWVJZCA9IHNldEludGVydmFsKCgpID0+IHsNCiAgICAgICAgdGhpcy5jdXJyZW50UGFnZSsrDQogICAgICAgIGlmICh0aGlzLmN1cnJlbnRQYWdlID4gdGhpcy50b3RhbFBhZ2UpIHsNCiAgICAgICAgICB0aGlzLmN1cnJlbnRQYWdlID0gMQ0KICAgICAgICB9DQogICAgICAgIHRoaXMudXBkYXRlQ2hhcnQoKQ0KICAgICAgfSwgMzAwMCkNCiAgICB9LA0KICAgIC8vIOWSjOWIhui+qOeOh+Wkp+Wwj+eahOmFjee9rg0KICAgIHNjcmVlbkFkYXB0ZXIgKCkgew0KICAgICAgLy8gY29uc29sZS5sb2codGhpcy4kcmVmcy5zZWxsZXJfcmVmLm9mZnNldFdpZHRoKTsNCiAgICAgIGNvbnN0IHRpdGxlRm9udFNpemUgPSB0aGlzLiRyZWZzLnNlbGxlcl9yZWYub2Zmc2V0V2lkdGggLyAxMDAgKiAzLjYNCiAgICAgIGNvbnN0IGFkYXB0ZXJPcHRpb24gPSB7DQogICAgICAgIHRpdGxlOiB7DQoNCiAgICAgICAgICB0ZXh0U3R5bGU6IHsNCiAgICAgICAgICAgIGZvbnRTaXplOiB0aXRsZUZvbnRTaXplDQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgYXhpc1BvaW50ZXI6IHsNCiAgICAgICAgICAgIHR5cGU6ICdsaW5lJywNCiAgICAgICAgICAgIGxpbmVTdHlsZTogew0KICAgICAgICAgICAgICB3aWR0aDogdGl0bGVGb250U2l6ZQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgYmFyV2lkdGg6IHRpdGxlRm9udFNpemUsDQogICAgICAgICAgICBpdGVtU3R5bGU6IHsNCiAgICAgICAgICAgICAgYmFyQm9yZGVyUmFkaXVzOiBbMCwgdGl0bGVGb250U2l6ZSAvIDIsIHRpdGxlRm9udFNpemUgLyAyLCAwXQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgXQ0KICAgICAgfQ0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihhZGFwdGVyT3B0aW9uKQ0KICAgICAgLy8gICDmiYvliqjnmoTosIPnlKjlm77ooajlr7nosaHnmoQgcmVzaXplIOaJjeiDveS6p+eUn+aViOaenA0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnJlc2l6ZSgpDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["Seller.vue"],"names":[],"mappingsfile":"Seller.vue","sourceRoot":"src/components","sourcesContent":["<!-- 商家销售统计的横向柱状图 -->\r\n\r\n<template>\r\n    <div class=\"com-container\">\r\n        <div class=\"com-chart\" ref=\"seller_ref\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n  data () {\r\n    return {\r\n      chartInstance: null, // charts实例对象\r\n      allData: [], // 服务器返回的数据\r\n      currentPage: 1, // 当前显示的页数\r\n      totalPage: 0, // 一共多少页\r\n      timeId: null // 定时器的标识\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['theme'])\r\n  },\r\n  watch: {\r\n    theme () {\r\n      this.chartInstance.dispose()\r\n      this.initChart()\r\n      this.screenAdapter()\r\n      this.updateChart()\r\n    }\r\n  },\r\n  created () {\r\n    // 在组件创建完成之后，进行回调函数的注册\r\n    this.$socket.registerCallBack('sellerData', this.getData)\r\n  },\r\n  mounted () {\r\n    this.initChart()\r\n    // this.getDate()\r\n    this.$socket.send({\r\n      action: 'getData',\r\n      socketType: 'sellerData',\r\n      charName: 'seller',\r\n      value: ''\r\n    })\r\n    window.addEventListener('resize', this.screenAdapter)\r\n    // 在页面加载完成的时候，主动进行屏幕的适配\r\n    this.screenAdapter()\r\n  },\r\n  destroyed () {\r\n    clearInterval(this.timeId)\r\n    window.removeEventListener('resize', this.screenAdapter)\r\n    this.$socket.unRegisterCallBack('sellerData')\r\n  },\r\n  methods: {\r\n    // 初始化echartsinstance对象\r\n    initChart () {\r\n      this.chartInstance = this.$echarts.init(this.$refs.seller_ref, this.theme)\r\n      // 对图表初始化配置的控制\r\n      const initOption = {\r\n        title: {\r\n          text: '┃ 商家销售统计',\r\n          left: 20,\r\n          top: 20\r\n        },\r\n        grid: {\r\n          top: '20%',\r\n          left: '3%',\r\n          right: '6%',\r\n          bottom: '3%',\r\n          containLabel: true // 距离是包含坐标轴上的文字\r\n        },\r\n        xAxis: {\r\n          type: 'value'\r\n        },\r\n        yAxis: {\r\n          type: 'category'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'line',\r\n            z: 0,\r\n            lineStyle: {\r\n              color: '#2D3443'\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            type: 'bar',\r\n            label: {\r\n              show: true,\r\n              positon: 'right',\r\n              textStyle: {\r\n                color: 'white'\r\n              }\r\n            },\r\n            itemStyle: {\r\n              // 指明颜色渐变的方向\r\n              // 指明不同百分比之下颜色的值\r\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                // 百分之0状态下的颜色值\r\n                {\r\n                  offset: 0,\r\n                  color: '#5052EE'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: '#AB6EE5'\r\n                }\r\n              ])\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(initOption)\r\n      // 对图表对象进行鼠标事件的监听\r\n      this.chartInstance.on('mouseover', () => {\r\n        clearInterval(this.timeId)\r\n      })\r\n      this.chartInstance.on('mouseout', () => {\r\n        this.startInterval()\r\n      })\r\n    },\r\n\r\n    // 获取服务器的数据\r\n    // async getDate () {\r\n    getData (ret) {\r\n      // http://127.0.0.1/8888/api/seller\r\n      // const { data: res } = await this.$http.get('seller')\r\n      // console.log(res)\r\n      this.allData = ret\r\n      this.allData.sort((a, b) => {\r\n        return a.value - b.value\r\n      })\r\n      // 每五个元素显示一页\r\n      this.totalPage = this.allData.length % 5 === 0 ? this.allData.length / 5 : this.allData.length / 5 + 1\r\n      this.updateChart()\r\n      // 启动定时器\r\n      this.startInterval()\r\n    },\r\n\r\n    // 更新图表\r\n    updateChart () {\r\n      const start = (this.currentPage - 1) * 5 // 0\r\n      const end = this.currentPage * 5 // 5\r\n      const showData = this.allData.slice(start, end)\r\n      // 处理数据并且更新界面图表\r\n      const sellerNames = showData.map((item) => {\r\n        return item.name\r\n      })\r\n      const sellerValues = showData.map((item) => {\r\n        return item.value\r\n      })\r\n      const dataOption = {\r\n        yAxis: {\r\n          data: sellerNames\r\n        },\r\n        series: [\r\n          {\r\n            data: sellerValues\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(dataOption)\r\n    },\r\n    startInterval () {\r\n      if (this.timeId) {\r\n        clearInterval(this.timeId)\r\n      }\r\n      this.timeId = setInterval(() => {\r\n        this.currentPage++\r\n        if (this.currentPage > this.totalPage) {\r\n          this.currentPage = 1\r\n        }\r\n        this.updateChart()\r\n      }, 3000)\r\n    },\r\n    // 和分辨率大小的配置\r\n    screenAdapter () {\r\n      // console.log(this.$refs.seller_ref.offsetWidth);\r\n      const titleFontSize = this.$refs.seller_ref.offsetWidth / 100 * 3.6\r\n      const adapterOption = {\r\n        title: {\r\n\r\n          textStyle: {\r\n            fontSize: titleFontSize\r\n          }\r\n        },\r\n        tooltip: {\r\n          axisPointer: {\r\n            type: 'line',\r\n            lineStyle: {\r\n              width: titleFontSize\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            barWidth: titleFontSize,\r\n            itemStyle: {\r\n              barBorderRadius: [0, titleFontSize / 2, titleFontSize / 2, 0]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(adapterOption)\r\n      //   手动的调用图表对象的 resize 才能产生效果\r\n      this.chartInstance.resize()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"]}]}