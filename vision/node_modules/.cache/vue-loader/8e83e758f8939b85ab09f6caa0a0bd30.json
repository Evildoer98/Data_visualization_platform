{"remainingRequest":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\src\\components\\Stock.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\src\\components\\Stock.vue","mtime":1624006338364},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\babel-loader\\lib\\index.js","mtime":1615108034142},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\vue-loader\\lib\\index.js","mtime":1615108060518}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Stock.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Stock.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <!-- 库存与销量模块（多个圆环饼图） -->\r\n    <div class=\"com-container\">\r\n        <div class=\"com-chart\" ref=\"stock_ref\">\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      chartInstance: null,\r\n      allData: null,\r\n      currentIndex: 0, // 当前显示的数据\r\n      timeId: null, // 定时器的标识\r\n      titleFontSize: 0\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['theme'])\r\n  },\r\n  watch: {\r\n    theme () {\r\n      this.chartInstance.dispose()\r\n      this.initChart()\r\n      this.screenAdapter()\r\n      this.updatedChart()\r\n    }\r\n  },\r\n  created () {\r\n    // 在组件创建完成之后，进行回调函数的注册\r\n    this.$socket.registerCallBack('stockData', this.getData)\r\n  },\r\n  mounted () {\r\n    this.initChart()\r\n    // this.getData()\r\n    this.$socket.send({\r\n      action: 'getData',\r\n      socketType: 'stockData',\r\n      charName: 'stock',\r\n      value: ''\r\n    })\r\n    window.addEventListener('resize', this.screenAdapter)\r\n    this.screenAdapter()\r\n  },\r\n  destroyed () {\r\n    window.removeEventListener('resize', this.screenAdapter)\r\n    clearInterval(this.timeId)\r\n    this.$socket.unRegisterCallBack('stockData')\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      this.chartInstance = this.$echarts.init(this.$refs.stock_ref, this.theme)\r\n      // 5个圆环对应的圆心点\r\n      const centerPointers = [\r\n        ['18%', '40%'],\r\n        ['50%', '40%'],\r\n        ['82%', '40%'],\r\n        ['34%', '75%'],\r\n        ['66%', '75%']\r\n      ]\r\n      const initOption = {\r\n        title: {\r\n          text: '┃ 库存销售量',\r\n          left: 20,\r\n          top: 20\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            center: centerPointers[0],\r\n            hoverAnimation: false,\r\n            label: {\r\n              show: true,\r\n              position: 'center'\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            }\r\n          }, {\r\n            type: 'pie',\r\n            center: centerPointers[1],\r\n            hoverAnimation: false,\r\n            label: {\r\n              show: true,\r\n              position: 'center'\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            }\r\n          },\r\n          {\r\n            type: 'pie',\r\n            center: centerPointers[2],\r\n            hoverAnimation: false,\r\n            label: {\r\n              show: true,\r\n              position: 'center'\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            }\r\n          },\r\n          {\r\n            type: 'pie',\r\n            center: centerPointers[3],\r\n            hoverAnimation: false,\r\n            label: {\r\n              show: true,\r\n              position: 'center'\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            }\r\n          },\r\n          {\r\n            type: 'pie',\r\n            center: centerPointers[4],\r\n            hoverAnimation: false,\r\n            label: {\r\n              show: true,\r\n              position: 'center'\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(initOption)\r\n      this.chartInstance.on('mouseover', () => {\r\n        clearInterval(this.timeId)\r\n      })\r\n      this.chartInstance.on('mouseout', () => {\r\n        this.startInterval()\r\n      })\r\n    },\r\n    // async getData () {\r\n    getData (ret) {\r\n      // const { data: ret } = await this.$http.get('stock')\r\n      this.allData = ret\r\n      this.updatedChart()\r\n      this.startInterval()\r\n    },\r\n    updatedChart () {\r\n      // 处理图表需要的数据\r\n\r\n      // 增加5个圆环的渐变颜色范围\r\n      const colorArrs = [\r\n        ['#4FF778', '#0BA82C'],\r\n        ['#E5DD45', '#E8B11C'],\r\n        ['#E8821C', '#E55445'],\r\n        ['#5052EE', '#AB6EE5'],\r\n        ['#23E5E5', '#2E72BF']\r\n      ]\r\n      const start = this.currentIndex * 5\r\n      const end = (this.currentIndex + 1) * 5\r\n      const showData = this.allData.slice(start, end)\r\n      const seriesArr = showData.map((item, index) => {\r\n        return {\r\n          label: {\r\n            color: colorArrs[index][0]\r\n          },\r\n          data: [\r\n            {\r\n              name: item.name + '\\n\\n' + item.sales,\r\n              value: item.sales,\r\n              itemStyle: {\r\n                color: new this.$echarts.graphic.LinearGradient(0, 1, 0, 0,\r\n                  [\r\n                    {\r\n                      offset: 0,\r\n                      color: colorArrs[index][0]\r\n                    },\r\n                    {\r\n                      offset: 1,\r\n                      color: colorArrs[index][1]\r\n                    }\r\n                  ])\r\n              }\r\n            },\r\n            {\r\n              value: item.stock,\r\n              itemStyle: {\r\n                color: '#333843'\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      })\r\n      const dataOption = {\r\n        series: seriesArr\r\n      }\r\n      this.chartInstance.setOption(dataOption)\r\n    },\r\n    screenAdapter () {\r\n      this.titleFontSize = this.$refs.stock_ref.offsetWidth / 100 * 3.6\r\n      const innerRadius = this.titleFontSize * 2.8\r\n      const outterRadius = innerRadius * 1.125\r\n      const adapterOption = {\r\n        title: {\r\n          textStyle: {\r\n            fontSize: this.titleFontSize\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            radius: [outterRadius, innerRadius],\r\n            label: {\r\n              fontSize: this.titleFontSize / 2\r\n            }\r\n          },\r\n          {\r\n            radius: [outterRadius, innerRadius],\r\n            label: {\r\n              fontSize: this.titleFontSize / 2\r\n            }\r\n          },\r\n          {\r\n            radius: [outterRadius, innerRadius],\r\n            label: {\r\n              fontSize: this.titleFontSize / 2\r\n            }\r\n          },\r\n          {\r\n\r\n            radius: [outterRadius, innerRadius],\r\n            label: {\r\n              fontSize: this.titleFontSize / 2\r\n            }\r\n          },\r\n          {\r\n\r\n            radius: [outterRadius, innerRadius],\r\n            label: {\r\n              fontSize: this.titleFontSize / 2\r\n            }\r\n          }\r\n        ]\r\n\r\n      }\r\n      this.chartInstance.setOption(adapterOption)\r\n      this.chartInstance.resize()\r\n    },\r\n    startInterval () {\r\n      if (this.timeId) {\r\n        clearInterval(this.timeId)\r\n      }\r\n      this.timeId = setInterval(() => {\r\n        this.currentIndex++\r\n        if (this.currentIndex > 1) {\r\n          this.currentIndex = 0\r\n        }\r\n        this.updatedChart() // 在更改完currentIndex之后，需要跟新界面\r\n      }, 5000)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}