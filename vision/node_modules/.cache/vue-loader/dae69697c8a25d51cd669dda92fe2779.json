{"remainingRequest":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Rank.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Rank.vue","mtime":1616858218901},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\babel-loader\\lib\\index.js","mtime":1615108034142},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js","mtime":1615108060518}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgZGF0YSAoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGNoYXJ0SW5zdGFuY2U6IG51bGwsDQogICAgICBhbGxEYXRhOiBudWxsLA0KICAgICAgc3RhcnRWYWx1ZTogMCwgLy8g5Yy65Z+f57yp5pS+55qE6LW354K55YC8DQogICAgICBlbmRWYWx1ZTogOSwgLy8g5Yy65Z+f57yp5pS+55qE57uI54K55YC8DQogICAgICB0aW1lSWQ6IG51bGwNCiAgICB9DQogIH0sDQogIGNvbXB1dGVkOiB7DQogICAgLi4ubWFwU3RhdGUoWyd0aGVtZSddKQ0KICB9LA0KICB3YXRjaDogew0KICAgIHRoZW1lICgpIHsNCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5kaXNwb3NlKCkNCiAgICAgIHRoaXMuaW5pdENoYXJ0KCkNCiAgICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpDQogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCkNCiAgICB9DQogIH0sDQogIGNyZWF0ZWQgKCkgew0KICAgIC8vIOWcqOe7hOS7tuWIm+W7uuWujOaIkOS5i+WQju+8jOi/m+ihjOWbnuiwg+WHveaVsOeahOazqOWGjA0KICAgIHRoaXMuJHNvY2tldC5yZWdpc3RlckNhbGxCYWNrKCdyYW5rRGF0YScsIHRoaXMuZ2V0RGF0YSkNCiAgfSwNCiAgbW91bnRlZCAoKSB7DQogICAgdGhpcy5pbml0Q2hhcnQoKQ0KICAgIC8vIHRoaXMuZ2V0RGF0YSgpDQogICAgdGhpcy4kc29ja2V0LnNlbmQoew0KICAgICAgYWN0aW9uOiAnZ2V0RGF0YScsDQogICAgICBzb2NrZXRUeXBlOiAncmFua0RhdGEnLA0KICAgICAgY2hhck5hbWU6ICdyYW5rJywNCiAgICAgIHZhbHVlOiAnJw0KICAgIH0pDQogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuc2NyZWVuQWRhcHRlcikNCiAgICB0aGlzLnNjcmVlbkFkYXB0ZXIoKQ0KICB9LA0KICBkZXN0cm95ZWQgKCkgew0KICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpDQogICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVJZCkNCiAgICB0aGlzLiRzb2NrZXQudW5SZWdpc3RlckNhbGxCYWNrKCdyYW5rRGF0YScpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBpbml0Q2hhcnQgKCkgew0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMucmFua19yZWYsIHRoaXMudGhlbWUpDQogICAgICBjb25zdCBpbml0T3B0aW9uID0gew0KICAgICAgICB0aXRsZTogew0KICAgICAgICAgIHRleHQ6ICfilIMg5Zyw5Yy66ZSA5ZSu5o6S6KGMJywNCiAgICAgICAgICBsZWZ0OiAyMCwNCiAgICAgICAgICB0b3A6IDIwDQogICAgICAgIH0sDQogICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICB0b3A6ICc0MCUnLA0KICAgICAgICAgIGxlZnQ6ICc1JScsDQogICAgICAgICAgcmlnaHQ6ICc1JScsDQogICAgICAgICAgYm90dG9tOiAnNSUnLA0KICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQ0KICAgICAgICB9LA0KICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgc2hvdzogdHJ1ZQ0KICAgICAgICB9LA0KICAgICAgICB4QXhpczogew0KICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScNCiAgICAgICAgfSwNCiAgICAgICAgeUF4aXM6IHsNCiAgICAgICAgICB0eXBlOiAndmFsdWUnDQogICAgICAgIH0sDQogICAgICAgIHNlcmllczogWw0KICAgICAgICAgIHsNCiAgICAgICAgICAgIHR5cGU6ICdiYXInDQogICAgICAgICAgfQ0KICAgICAgICBdDQogICAgICB9DQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGluaXRPcHRpb24pDQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uub24oJ21vdXNlb3ZlcicsICgpID0+IHsNCiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVJZCkNCiAgICAgIH0pDQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uub24oJ21vdXNlb3V0JywgKCkgPT4gew0KICAgICAgICB0aGlzLnN0YXJ0SW50ZXJ2YWwoKQ0KICAgICAgfSkNCiAgICB9LA0KICAgIC8vIGFzeW5jIGdldERhdGEgKCkgew0KICAgIGdldERhdGEgKHJldCkgew0KICAgICAgLy8gY29uc3QgeyBkYXRhOiByZXQgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCdyYW5rJykNCiAgICAgIHRoaXMuYWxsRGF0YSA9IHJldA0KICAgICAgLy8g5a+5YWxsRGF0YemHjOmdoueahOavj+S4gOS4quWFg+e0oOi/m+ihjOaOkuW6j++8jOS7juWkp+WIsOWwjw0KICAgICAgdGhpcy5hbGxEYXRhLnNvcnQoKGEsIGIpID0+IHsNCiAgICAgICAgcmV0dXJuIGIudmFsdWUgLSBhLnZhbHVlDQogICAgICB9KQ0KICAgICAgdGhpcy51cGRhdGVkQ2hhcnQoKQ0KICAgICAgdGhpcy5zdGFydEludGVydmFsKCkNCiAgICB9LA0KICAgIHVwZGF0ZWRDaGFydCAoKSB7DQogICAgICBjb25zdCBjb2xvckFyciA9IFsNCiAgICAgICAgWycjMEJBODJDJywgJyM0RkY3NzgnXSwNCiAgICAgICAgWycjMkU3MkJGJywgJyMyM0U1RTUnXSwNCiAgICAgICAgWycjNTA1MkVFJywgJyNBQjZFRTUnXQ0KICAgICAgXQ0KDQogICAgICAvLyDmiYDmnInnnIHku73miYDlr7nlupTnmoTmlbDnu4QNCiAgICAgIGNvbnN0IHByb3ZpbmNlQXJyID0gdGhpcy5hbGxEYXRhLm1hcChpdGVtID0+IHsNCiAgICAgICAgcmV0dXJuIGl0ZW0ubmFtZQ0KICAgICAgfSkNCiAgICAgIC8vIOaJgOacieecgeS7veaJgOWvueW6lOeahOmUgOWUrumHkeminQ0KICAgICAgY29uc3QgdmFsdWVBcnIgPSB0aGlzLmFsbERhdGEubWFwKGl0ZW0gPT4gew0KICAgICAgICByZXR1cm4gaXRlbS52YWx1ZQ0KICAgICAgfSkNCiAgICAgIGNvbnN0IGRhdGFPcHRpb24gPSB7DQogICAgICAgIHhBeGlzOiB7DQogICAgICAgICAgZGF0YTogcHJvdmluY2VBcnINCiAgICAgICAgfSwNCiAgICAgICAgZGF0YVpvb206IHsNCiAgICAgICAgICBzaG93OiBmYWxzZSwNCiAgICAgICAgICBzdGFydFZhbHVlOiB0aGlzLnN0YXJ0VmFsdWUsDQogICAgICAgICAgZW5kVmFsdWU6IHRoaXMuZW5kVmFsdWUNCiAgICAgICAgfSwNCiAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgZGF0YTogdmFsdWVBcnIsDQogICAgICAgICAgICBpdGVtU3R5bGU6IHsNCiAgICAgICAgICAgICAgY29sb3I6IGFyZyA9PiB7DQogICAgICAgICAgICAgICAgbGV0IHRhcmdldENvbG9yQXJyID0gY29sb3JBcnJbMF0NCiAgICAgICAgICAgICAgICBpZiAoYXJnLnZhbHVlID4gMzAwKSB7DQogICAgICAgICAgICAgICAgICB0YXJnZXRDb2xvckFyciA9IGNvbG9yQXJyWzBdDQogICAgICAgICAgICAgICAgfSBlbHNlIGlmIChhcmcudmFsdWUgPiAyMDApIHsNCiAgICAgICAgICAgICAgICAgIHRhcmdldENvbG9yQXJyID0gY29sb3JBcnJbMV0NCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgdGFyZ2V0Q29sb3JBcnIgPSBjb2xvckFyclsyXQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICByZXR1cm4gbmV3IHRoaXMuJGVjaGFydHMuZ3JhcGhpYy5MaW5lYXJHcmFkaWVudCgwLCAwLCAwLCAxLCBbDQogICAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICAgIG9mZnNldDogMCwNCiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHRhcmdldENvbG9yQXJyWzBdDQogICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IDEsDQogICAgICAgICAgICAgICAgICAgIGNvbG9yOiB0YXJnZXRDb2xvckFyclsxXQ0KICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIF0pDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIF0NCiAgICAgIH0NCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oZGF0YU9wdGlvbikNCiAgICB9LA0KICAgIHNjcmVlbkFkYXB0ZXIgKCkgew0KICAgICAgY29uc3QgdGl0bGVGb250U2l6ZSA9IHRoaXMuJHJlZnMucmFua19yZWYub2Zmc2V0V2lkdGggLyAxMDAgKiAzLjYNCiAgICAgIGNvbnN0IGFkYXB0ZXJPcHRpb24gPSB7DQogICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgdGV4dFN0eWxlOiB7DQogICAgICAgICAgICBmb250U2l6ZTogdGl0bGVGb250U2l6ZQ0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgYmFyV2lkdGg6IHRpdGxlRm9udFNpemUsDQogICAgICAgICAgICBpdGVtU3R5bGU6IHsNCiAgICAgICAgICAgICAgYmFyQm9yZGVyUmFkaXVzOiBbdGl0bGVGb250U2l6ZSAvIDIsIHRpdGxlRm9udFNpemUgLyAyLCAwLCAwXQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgXQ0KICAgICAgfQ0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihhZGFwdGVyT3B0aW9uKQ0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnJlc2l6ZSgpDQogICAgfSwNCiAgICBzdGFydEludGVydmFsICgpIHsNCiAgICAgIGlmICh0aGlzLnRpbWVJZCkgew0KICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZUlkKQ0KICAgICAgfQ0KICAgICAgdGhpcy50aW1lSWQgPSBzZXRJbnRlcnZhbCgoKSA9PiB7DQogICAgICAgIHRoaXMuc3RhcnRWYWx1ZSsrDQogICAgICAgIHRoaXMuZW5kVmFsdWUrKw0KICAgICAgICBpZiAodGhpcy5lbmRWYWx1ZSA+IHRoaXMuYWxsRGF0YS5sZW5ndGggLSAxKSB7DQogICAgICAgICAgdGhpcy5zdGFydFZhbHVlID0gMA0KICAgICAgICAgIHRoaXMuZW5kVmFsdWUgPSA5DQogICAgICAgIH0NCiAgICAgICAgdGhpcy51cGRhdGVkQ2hhcnQoKQ0KICAgICAgfSwgMjAwMCkNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["Rank.vue"],"names":[],"mappingsfile":"Rank.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"com-container\">\r\n        <div class=\"com-chart\" ref=\"rank_ref\">\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      chartInstance: null,\r\n      allData: null,\r\n      startValue: 0, // 区域缩放的起点值\r\n      endValue: 9, // 区域缩放的终点值\r\n      timeId: null\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['theme'])\r\n  },\r\n  watch: {\r\n    theme () {\r\n      this.chartInstance.dispose()\r\n      this.initChart()\r\n      this.screenAdapter()\r\n      this.updateChart()\r\n    }\r\n  },\r\n  created () {\r\n    // 在组件创建完成之后，进行回调函数的注册\r\n    this.$socket.registerCallBack('rankData', this.getData)\r\n  },\r\n  mounted () {\r\n    this.initChart()\r\n    // this.getData()\r\n    this.$socket.send({\r\n      action: 'getData',\r\n      socketType: 'rankData',\r\n      charName: 'rank',\r\n      value: ''\r\n    })\r\n    window.addEventListener('resize', this.screenAdapter)\r\n    this.screenAdapter()\r\n  },\r\n  destroyed () {\r\n    window.removeEventListener('resize', this.screenAdapter)\r\n    clearInterval(this.timeId)\r\n    this.$socket.unRegisterCallBack('rankData')\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      this.chartInstance = this.$echarts.init(this.$refs.rank_ref, this.theme)\r\n      const initOption = {\r\n        title: {\r\n          text: '┃ 地区销售排行',\r\n          left: 20,\r\n          top: 20\r\n        },\r\n        grid: {\r\n          top: '40%',\r\n          left: '5%',\r\n          right: '5%',\r\n          bottom: '5%',\r\n          containLabel: true\r\n        },\r\n        tooltip: {\r\n          show: true\r\n        },\r\n        xAxis: {\r\n          type: 'category'\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            type: 'bar'\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(initOption)\r\n      this.chartInstance.on('mouseover', () => {\r\n        clearInterval(this.timeId)\r\n      })\r\n      this.chartInstance.on('mouseout', () => {\r\n        this.startInterval()\r\n      })\r\n    },\r\n    // async getData () {\r\n    getData (ret) {\r\n      // const { data: ret } = await this.$http.get('rank')\r\n      this.allData = ret\r\n      // 对allData里面的每一个元素进行排序，从大到小\r\n      this.allData.sort((a, b) => {\r\n        return b.value - a.value\r\n      })\r\n      this.updatedChart()\r\n      this.startInterval()\r\n    },\r\n    updatedChart () {\r\n      const colorArr = [\r\n        ['#0BA82C', '#4FF778'],\r\n        ['#2E72BF', '#23E5E5'],\r\n        ['#5052EE', '#AB6EE5']\r\n      ]\r\n\r\n      // 所有省份所对应的数组\r\n      const provinceArr = this.allData.map(item => {\r\n        return item.name\r\n      })\r\n      // 所有省份所对应的销售金额\r\n      const valueArr = this.allData.map(item => {\r\n        return item.value\r\n      })\r\n      const dataOption = {\r\n        xAxis: {\r\n          data: provinceArr\r\n        },\r\n        dataZoom: {\r\n          show: false,\r\n          startValue: this.startValue,\r\n          endValue: this.endValue\r\n        },\r\n        series: [\r\n          {\r\n            data: valueArr,\r\n            itemStyle: {\r\n              color: arg => {\r\n                let targetColorArr = colorArr[0]\r\n                if (arg.value > 300) {\r\n                  targetColorArr = colorArr[0]\r\n                } else if (arg.value > 200) {\r\n                  targetColorArr = colorArr[1]\r\n                } else {\r\n                  targetColorArr = colorArr[2]\r\n                }\r\n                return new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                  {\r\n                    offset: 0,\r\n                    color: targetColorArr[0]\r\n                  },\r\n                  {\r\n                    offset: 1,\r\n                    color: targetColorArr[1]\r\n                  }\r\n                ])\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(dataOption)\r\n    },\r\n    screenAdapter () {\r\n      const titleFontSize = this.$refs.rank_ref.offsetWidth / 100 * 3.6\r\n      const adapterOption = {\r\n        title: {\r\n          textStyle: {\r\n            fontSize: titleFontSize\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            barWidth: titleFontSize,\r\n            itemStyle: {\r\n              barBorderRadius: [titleFontSize / 2, titleFontSize / 2, 0, 0]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(adapterOption)\r\n      this.chartInstance.resize()\r\n    },\r\n    startInterval () {\r\n      if (this.timeId) {\r\n        clearInterval(this.timeId)\r\n      }\r\n      this.timeId = setInterval(() => {\r\n        this.startValue++\r\n        this.endValue++\r\n        if (this.endValue > this.allData.length - 1) {\r\n          this.startValue = 0\r\n          this.endValue = 9\r\n        }\r\n        this.updatedChart()\r\n      }, 2000)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n\r\n</style>\r\n"]}]}