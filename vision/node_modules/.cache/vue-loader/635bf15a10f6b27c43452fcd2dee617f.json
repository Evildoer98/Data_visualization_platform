{"remainingRequest":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Trend.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Trend.vue","mtime":1616899459458},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\babel-loader\\lib\\index.js","mtime":1615108034142},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js","mtime":1615108060518}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnDQppbXBvcnQgeyBnZXRUaGVtZVZhbHVlIH0gZnJvbSAnQC91dGlscy90aGVtZV91dGlscycNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhICgpIHsNCiAgICByZXR1cm4gew0KICAgICAgY2hhcnRJbnN0YW5jZTogbnVsbCwNCiAgICAgIGFsbERhdGE6IG51bGwsDQogICAgICBzaG93Q2hvaWNlOiBmYWxzZSwgLy8g5piv5ZCm5pi+56S65Y+v6YCJ6aG5DQogICAgICBjaG9pY2VUeXBlOiAnbWFwJywgLy8g5pi+56S65pWw5o2u57G75Z6LDQogICAgICB0aXRsZUZvbnRTaXplOiAwIC8vIOaMh+aYjuagh+mimOeahOWtl+S9k+Wkp+Wwjw0KICAgIH0NCiAgfSwNCiAgY3JlYXRlZCAoKSB7DQogICAgLy8g5Zyo57uE5Lu25Yib5bu65a6M5oiQ5LmL5ZCO77yM6L+b6KGM5Zue6LCD5Ye95pWw55qE5rOo5YaMDQogICAgdGhpcy4kc29ja2V0LnJlZ2lzdGVyQ2FsbEJhY2soJ3RyZW5kRGF0YScsIHRoaXMuZ2V0RGF0YSkNCiAgfSwNCiAgbW91bnRlZCAoKSB7DQogICAgdGhpcy5pbml0Q2hhcnQoKQ0KICAgIC8vIHRoaXMuZ2V0RGF0YSgpDQogICAgLy8g5Y+R6YCB5pWw5o2u57uZ5pyN5Yqh5Zmo77yM5ZGK6K+J5pyN5Yqh5Zmo77yM5oiR546w5Zyo6ZyA6KaB5pWw5o2uDQogICAgdGhpcy4kc29ja2V0LnNlbmQoew0KICAgICAgYWN0aW9uOiAnZ2V0RGF0YScsDQogICAgICBzb2NrZXRUeXBlOiAndHJlbmREYXRhJywNCiAgICAgIGNoYXJOYW1lOiAndHJlbmQnLA0KICAgICAgdmFsdWU6ICcnDQogICAgfSkNCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKQ0KICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpDQogIH0sDQogIGRlc3Ryb3llZCAoKSB7DQogICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuc2NyZWVuQWRhcHRlcikNCiAgICAvLyDlnKjnu4Tku7bplIDmr4HnmoTml7blgJnvvIzov5vooYzlm57osIPlh73mlbDnmoTlj5bmtogNCiAgICB0aGlzLiRzb2NrZXQudW5SZWdpc3RlckNhbGxCYWNrKCd0cmVuZERhdGEnKQ0KICB9LA0KICB3YXRjaDogew0KICAgIHRoZW1lICgpIHsNCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5kaXNwb3NlKCkNCiAgICAgIHRoaXMuaW5pdENoYXJ0KCkNCiAgICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpDQogICAgICB0aGlzLnVwZGF0ZWRDaGFydCgpDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcFN0YXRlKFsndGhlbWUnXSksDQogICAgc2VsZWN0VHlwZXMgKCkgew0KICAgICAgaWYgKCF0aGlzLmFsbERhdGEpIHsNCiAgICAgICAgcmV0dXJuIFtdDQogICAgICB9IGVsc2Ugew0KICAgICAgICAvLyDpmpDol4/lt7Lnu4/mmL7npLrnmoTmoIfpopgNCiAgICAgICAgcmV0dXJuIHRoaXMuYWxsRGF0YS50eXBlLmZpbHRlcihpdGVtID0+IHsNCiAgICAgICAgICByZXR1cm4gaXRlbS5rZXkgIT09IHRoaXMuY2hvaWNlVHlwZQ0KICAgICAgICB9KQ0KICAgICAgfQ0KICAgIH0sDQogICAgc2hvd1RpdGxlICgpIHsNCiAgICAgIGlmICghdGhpcy5hbGxEYXRhKSB7DQogICAgICAgIHJldHVybiAnJw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuYWxsRGF0YVt0aGlzLmNob2ljZVR5cGVdLnRpdGxlDQogICAgICB9DQogICAgfSwNCiAgICBjb21TdHlsZSAoKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICBmb250U2l6ZTogdGhpcy50aXRsZUZvbnRTaXplICsgJ3B4JywNCiAgICAgICAgY29sb3I6IGdldFRoZW1lVmFsdWUodGhpcy50aGVtZSkudGl0bGVDb2xvcg0KICAgICAgfQ0KICAgIH0sDQogICAgbWFyZ2luU3R5bGUgKCkgew0KICAgICAgcmV0dXJuIHsNCiAgICAgICAgbWFyZ2luTGVmdDogdGhpcy50aXRsZUZvbnRTaXplICsgJ3B4JywNCiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBnZXRUaGVtZVZhbHVlKHRoaXMudGhlbWUpLmJhY2tncm91bmRDb2xvciwNCiAgICAgICAgY29sb3I6IGdldFRoZW1lVmFsdWUodGhpcy50aGVtZSkudGl0bGVDb2xvcg0KICAgICAgfQ0KICAgIH0NCg0KICB9LA0KICBtZXRob2RzOiB7DQogICAgaW5pdENoYXJ0ICgpIHsNCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZSA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLnRyZW5kX3JlZiwgdGhpcy50aGVtZSkNCiAgICAgIGNvbnN0IGluaXRPcHRpb24gPSB7DQogICAgICAgIGdyaWQ6IHsNCiAgICAgICAgICBsZXRmOiAnMyUnLA0KICAgICAgICAgIHRvcDogJzM1JScsDQogICAgICAgICAgcmlnaHQ6ICc0JScsDQogICAgICAgICAgYm90dG9tOiAnMSUnLA0KICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQ0KICAgICAgICB9LA0KICAgICAgICAvLyDlt6Xlhbfmj5DnpLoNCiAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgIHRyaWdnZXI6ICdheGlzJw0KICAgICAgICB9LA0KICAgICAgICAvLyDlm77kvosNCiAgICAgICAgbGVnZW5kOiB7DQogICAgICAgICAgbGVmdDogMjAsDQogICAgICAgICAgdG9wOiAnMTUlJywNCiAgICAgICAgICBpY29uOiAnY2lyY2xlJw0KICAgICAgICB9LA0KICAgICAgICB4QXhpczogew0KICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsDQogICAgICAgICAgLy8g5peg57ydDQogICAgICAgICAgYm91bmRhcnk6IGZhbHNlDQogICAgICAgIH0sDQogICAgICAgIHlBeGlzOiB7DQogICAgICAgICAgdHlwZTogJ3ZhbHVlJw0KICAgICAgICB9DQogICAgICB9DQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGluaXRPcHRpb24pDQogICAgfSwNCiAgICAvLyByZXQg5bCx5piv5pyN5Yqh56uv5Y+R6YCB57uZ5a6i5oi356uv55qE5Zu+6KGo55qE5pWw5o2uDQogICAgLy8gYXN5bmMgZ2V0RGF0YSAocmV0KSB7DQogICAgZ2V0RGF0YSAocmV0KSB7DQogICAgICAvLyBhd2FpdCB0aGlzLiRodHRwLmdldCgpDQogICAgICAvLyDlr7lhbGxEYXRh6L+b6KGM6LWL5YC8DQogICAgICAvLyBjb25zdCB7IGRhdGE6IHJldCB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoJ3RyZW5kJykNCiAgICAgIC8vIGNvbnNvbGUubG9nKHJldCkNCiAgICAgIHRoaXMuYWxsRGF0YSA9IHJldA0KICAgICAgLy8gY29uc29sZS5sb2cocmV0KQ0KICAgICAgdGhpcy51cGRhdGVkQ2hhcnQoKQ0KICAgIH0sDQogICAgdXBkYXRlZENoYXJ0ICgpIHsNCiAgICAgIC8vIOWNiumAj+aYjueahOminOiJsuWAvA0KICAgICAgY29uc3QgY29sb3JBcnIxID0gWw0KICAgICAgICAncmdiYSgxMSwgMTY4LCA0NCwgMC41KScsDQogICAgICAgICdyZ2JhKDQ0LCAxMTAsIDI1NSwgMC41KScsDQogICAgICAgICdyZ2JhKDIyLCAyNDIsIDIxNywgMC41KScsDQogICAgICAgICdyZ2JhKDI1NCwgMzMsIDMwLCAwLjUpJywNCiAgICAgICAgJ3JnYmEoMjUwLCAxMDUsIDAsIDAuNSknDQogICAgICBdDQogICAgICAvLyDlhajpgI/mmI7nmoTpopzoibLlgLwNCiAgICAgIGNvbnN0IGNvbG9yQXJyMiA9IFsNCiAgICAgICAgJ3JnYmEoMTEsIDE2OCwgNDQsIDApJywNCiAgICAgICAgJ3JnYmEoNDQsIDExMCwgMjU1LCAwKScsDQogICAgICAgICdyZ2JhKDIyLCAyNDIsIDIxNywgMCknLA0KICAgICAgICAncmdiYSgyNTQsIDMzLCAzMCwgMCknLA0KICAgICAgICAncmdiYSgyNTAsIDEwNSwgMCwgMCknDQogICAgICBdDQoNCiAgICAgIC8vIOWkhOeQhuaVsOaNrg0KICAgICAgLy8g57G755uu6L2055qE5pWw5o2uDQogICAgICBjb25zdCB0aW1lQXJyID0gdGhpcy5hbGxEYXRhLmNvbW1vbi5tb250aA0KICAgICAgLy8geei9tOeahOaVsOaNrnNlcmllc+S4i+eahOaVsOaNrg0KICAgICAgY29uc3QgdmFsdWVBcnIgPSB0aGlzLmFsbERhdGFbdGhpcy5jaG9pY2VUeXBlXS5kYXRhDQogICAgICBjb25zdCBzZXJpZXNBcnIgPSB2YWx1ZUFyci5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgbmFtZTogaXRlbS5uYW1lLA0KICAgICAgICAgIHR5cGU6ICdsaW5lJywNCiAgICAgICAgICBkYXRhOiBpdGVtLmRhdGEsDQogICAgICAgICAgc3RhY2s6IHRoaXMuY2hvaWNlVHlwZSwNCiAgICAgICAgICBhcmVhU3R5bGU6IHsNCiAgICAgICAgICAgIGNvbG9yOiBuZXcgdGhpcy4kZWNoYXJ0cy5ncmFwaGljLkxpbmVhckdyYWRpZW50KDAsIDAsIDAsIDEsIFsNCiAgICAgICAgICAgICAgLy8g55m+5YiG5LmLMCDnmoTpopzoibLlgLwNCiAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIG9mZnNldDogMCwNCiAgICAgICAgICAgICAgICBjb2xvcjogY29sb3JBcnIxW2luZGV4XQ0KICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAvLyDnmb7liIbkuYvnmb7nmoTpopzoibLlgLwNCiAgICAgICAgICAgICAgew0KICAgICAgICAgICAgICAgIG9mZnNldDogMSwNCiAgICAgICAgICAgICAgICBjb2xvcjogY29sb3JBcnIyW2luZGV4XQ0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICBdKQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICAgIC8vIOWbvuS+i+eahOaVsOaNrg0KICAgICAgY29uc3QgbGVnZW5BcnIgPSB2YWx1ZUFyci5tYXAoaXRlbSA9PiB7DQogICAgICAgIHJldHVybiBpdGVtLm5hbWUNCiAgICAgIH0pDQogICAgICBjb25zdCBkYXRhT3B0aW9uID0gew0KICAgICAgICB4QXhpczogew0KICAgICAgICAgIGRhdGE6IHRpbWVBcnINCiAgICAgICAgfSwNCiAgICAgICAgbGVnZW5kOiB7DQogICAgICAgICAgZGF0YTogbGVnZW5BcnINCiAgICAgICAgfSwNCiAgICAgICAgc2VyaWVzOiBzZXJpZXNBcnINCiAgICAgIH0NCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oZGF0YU9wdGlvbikNCiAgICB9LA0KICAgIHNjcmVlbkFkYXB0ZXIgKCkgew0KICAgICAgdGhpcy50aXRsZUZvbnRTaXplID0gdGhpcy4kcmVmcy50cmVuZF9yZWYub2Zmc2V0V2lkdGggLyAxMDAgKiAzLjYNCiAgICAgIGNvbnN0IGFkYXB0ZXJPcHRpb24gPSB7DQogICAgICAgIGxlZ2VuZDogew0KICAgICAgICAgIGl0ZW1XaWR0aDogdGhpcy50aXRsZUZvbnRTaXplLA0KICAgICAgICAgIGl0ZW1IZWlnaHQ6IHRoaXMudGl0bGVGb250U2l6ZSwNCiAgICAgICAgICBpdGVtR2FwOiB0aGlzLnRpdGxlRm9udFNpemUsDQogICAgICAgICAgdGV4dFN0eWxlOiB7DQogICAgICAgICAgICBmb250U2l6ZTogdGhpcy50aXRsZUZvbnRTaXplIC8gMg0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihhZGFwdGVyT3B0aW9uKQ0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnJlc2l6ZSgpDQogICAgfSwNCiAgICBoYW5kbGVTZWxlY3QgKGN1cnJlbnRUeXBlKSB7DQogICAgICB0aGlzLmNob2ljZVR5cGUgPSBjdXJyZW50VHlwZQ0KICAgICAgdGhpcy51cGRhdGVkQ2hhcnQoKQ0KICAgICAgdGhpcy5zaG93Q2hvaWNlID0gZmFsc2UNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["Trend.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgfile":"Trend.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"com-container\">\r\n      <div class=\"title\" :style=\"comStyle\">\r\n        <span>{{'┃ ' + showTitle}}</span>\r\n        <span class=\"iconfont title-icon\" :style=\"comStyle\" @click=\"showChoice = !showChoice\">&#xe6eb;</span>\r\n        <div class=\"select-con\" v-show=\"showChoice\" :style=\"marginStyle\">\r\n          <div class=\"select-item\" v-for=\"item in selectTypes\" :key = \"item.key\" @click=\"handleSelect(item.key)\">\r\n            {{ item.text }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"com-chart\" ref=\"trend_ref\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport { getThemeValue } from '@/utils/theme_utils'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      chartInstance: null,\r\n      allData: null,\r\n      showChoice: false, // 是否显示可选项\r\n      choiceType: 'map', // 显示数据类型\r\n      titleFontSize: 0 // 指明标题的字体大小\r\n    }\r\n  },\r\n  created () {\r\n    // 在组件创建完成之后，进行回调函数的注册\r\n    this.$socket.registerCallBack('trendData', this.getData)\r\n  },\r\n  mounted () {\r\n    this.initChart()\r\n    // this.getData()\r\n    // 发送数据给服务器，告诉服务器，我现在需要数据\r\n    this.$socket.send({\r\n      action: 'getData',\r\n      socketType: 'trendData',\r\n      charName: 'trend',\r\n      value: ''\r\n    })\r\n    window.addEventListener('resize', this.screenAdapter)\r\n    this.screenAdapter()\r\n  },\r\n  destroyed () {\r\n    window.removeEventListener('resize', this.screenAdapter)\r\n    // 在组件销毁的时候，进行回调函数的取消\r\n    this.$socket.unRegisterCallBack('trendData')\r\n  },\r\n  watch: {\r\n    theme () {\r\n      this.chartInstance.dispose()\r\n      this.initChart()\r\n      this.screenAdapter()\r\n      this.updatedChart()\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['theme']),\r\n    selectTypes () {\r\n      if (!this.allData) {\r\n        return []\r\n      } else {\r\n        // 隐藏已经显示的标题\r\n        return this.allData.type.filter(item => {\r\n          return item.key !== this.choiceType\r\n        })\r\n      }\r\n    },\r\n    showTitle () {\r\n      if (!this.allData) {\r\n        return ''\r\n      } else {\r\n        return this.allData[this.choiceType].title\r\n      }\r\n    },\r\n    comStyle () {\r\n      return {\r\n        fontSize: this.titleFontSize + 'px',\r\n        color: getThemeValue(this.theme).titleColor\r\n      }\r\n    },\r\n    marginStyle () {\r\n      return {\r\n        marginLeft: this.titleFontSize + 'px',\r\n        backgroundColor: getThemeValue(this.theme).backgroundColor,\r\n        color: getThemeValue(this.theme).titleColor\r\n      }\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      this.chartInstance = this.$echarts.init(this.$refs.trend_ref, this.theme)\r\n      const initOption = {\r\n        grid: {\r\n          letf: '3%',\r\n          top: '35%',\r\n          right: '4%',\r\n          bottom: '1%',\r\n          containLabel: true\r\n        },\r\n        // 工具提示\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        // 图例\r\n        legend: {\r\n          left: 20,\r\n          top: '15%',\r\n          icon: 'circle'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          // 无缝\r\n          boundary: false\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        }\r\n      }\r\n      this.chartInstance.setOption(initOption)\r\n    },\r\n    // ret 就是服务端发送给客户端的图表的数据\r\n    // async getData (ret) {\r\n    getData (ret) {\r\n      // await this.$http.get()\r\n      // 对allData进行赋值\r\n      // const { data: ret } = await this.$http.get('trend')\r\n      // console.log(ret)\r\n      this.allData = ret\r\n      // console.log(ret)\r\n      this.updatedChart()\r\n    },\r\n    updatedChart () {\r\n      // 半透明的颜色值\r\n      const colorArr1 = [\r\n        'rgba(11, 168, 44, 0.5)',\r\n        'rgba(44, 110, 255, 0.5)',\r\n        'rgba(22, 242, 217, 0.5)',\r\n        'rgba(254, 33, 30, 0.5)',\r\n        'rgba(250, 105, 0, 0.5)'\r\n      ]\r\n      // 全透明的颜色值\r\n      const colorArr2 = [\r\n        'rgba(11, 168, 44, 0)',\r\n        'rgba(44, 110, 255, 0)',\r\n        'rgba(22, 242, 217, 0)',\r\n        'rgba(254, 33, 30, 0)',\r\n        'rgba(250, 105, 0, 0)'\r\n      ]\r\n\r\n      // 处理数据\r\n      // 类目轴的数据\r\n      const timeArr = this.allData.common.month\r\n      // y轴的数据series下的数据\r\n      const valueArr = this.allData[this.choiceType].data\r\n      const seriesArr = valueArr.map((item, index) => {\r\n        return {\r\n          name: item.name,\r\n          type: 'line',\r\n          data: item.data,\r\n          stack: this.choiceType,\r\n          areaStyle: {\r\n            color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              // 百分之0 的颜色值\r\n              {\r\n                offset: 0,\r\n                color: colorArr1[index]\r\n              },\r\n              // 百分之百的颜色值\r\n              {\r\n                offset: 1,\r\n                color: colorArr2[index]\r\n              }\r\n            ])\r\n          }\r\n        }\r\n      })\r\n      // 图例的数据\r\n      const legenArr = valueArr.map(item => {\r\n        return item.name\r\n      })\r\n      const dataOption = {\r\n        xAxis: {\r\n          data: timeArr\r\n        },\r\n        legend: {\r\n          data: legenArr\r\n        },\r\n        series: seriesArr\r\n      }\r\n      this.chartInstance.setOption(dataOption)\r\n    },\r\n    screenAdapter () {\r\n      this.titleFontSize = this.$refs.trend_ref.offsetWidth / 100 * 3.6\r\n      const adapterOption = {\r\n        legend: {\r\n          itemWidth: this.titleFontSize,\r\n          itemHeight: this.titleFontSize,\r\n          itemGap: this.titleFontSize,\r\n          textStyle: {\r\n            fontSize: this.titleFontSize / 2\r\n          }\r\n        }\r\n      }\r\n      this.chartInstance.setOption(adapterOption)\r\n      this.chartInstance.resize()\r\n    },\r\n    handleSelect (currentType) {\r\n      this.choiceType = currentType\r\n      this.updatedChart()\r\n      this.showChoice = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.title{\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 20px;\r\n  z-index: 10;\r\n  color: white;\r\n}\r\n.title-icon{\r\n    margin-left: 10px;\r\n    cursor:pointer;\r\n  }\r\n.select-con{\r\n  background-color: #222733;\r\n}\r\n</style>\r\n"]}]}