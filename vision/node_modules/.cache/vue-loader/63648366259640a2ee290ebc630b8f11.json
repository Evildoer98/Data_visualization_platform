{"remainingRequest":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\src\\components\\Seller.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\src\\components\\Seller.vue","mtime":1624006327466},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\babel-loader\\lib\\index.js","mtime":1615108034142},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\vue-loader\\lib\\index.js","mtime":1615108060518}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEgKCkgew0KICAgIHJldHVybiB7DQogICAgICBjaGFydEluc3RhbmNlOiBudWxsLCAvLyBjaGFydHPlrp7kvovlr7nosaENCiAgICAgIGFsbERhdGE6IFtdLCAvLyDmnI3liqHlmajov5Tlm57nmoTmlbDmja4NCiAgICAgIGN1cnJlbnRQYWdlOiAxLCAvLyDlvZPliY3mmL7npLrnmoTpobXmlbANCiAgICAgIHRvdGFsUGFnZTogMCwgLy8g5LiA5YWx5aSa5bCR6aG1DQogICAgICB0aW1lSWQ6IG51bGwgLy8g5a6a5pe25Zmo55qE5qCH6K+GDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcFN0YXRlKFsndGhlbWUnXSkNCiAgfSwNCiAgd2F0Y2g6IHsNCiAgICB0aGVtZSAoKSB7DQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2UuZGlzcG9zZSgpDQogICAgICB0aGlzLmluaXRDaGFydCgpDQogICAgICB0aGlzLnNjcmVlbkFkYXB0ZXIoKQ0KICAgICAgdGhpcy51cGRhdGVkQ2hhcnQoKQ0KICAgIH0NCiAgfSwNCiAgY3JlYXRlZCAoKSB7DQogICAgLy8g5Zyo57uE5Lu25Yib5bu65a6M5oiQ5LmL5ZCO77yM6L+b6KGM5Zue6LCD5Ye95pWw55qE5rOo5YaMDQogICAgdGhpcy4kc29ja2V0LnJlZ2lzdGVyQ2FsbEJhY2soJ3NlbGxlckRhdGEnLCB0aGlzLmdldERhdGEpDQogIH0sDQogIG1vdW50ZWQgKCkgew0KICAgIHRoaXMuaW5pdENoYXJ0KCkNCiAgICAvLyB0aGlzLmdldERhdGUoKQ0KICAgIHRoaXMuJHNvY2tldC5zZW5kKHsNCiAgICAgIGFjdGlvbjogJ2dldERhdGEnLA0KICAgICAgc29ja2V0VHlwZTogJ3NlbGxlckRhdGEnLA0KICAgICAgY2hhck5hbWU6ICdzZWxsZXInLA0KICAgICAgdmFsdWU6ICcnDQogICAgfSkNCiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKQ0KICAgIC8vIOWcqOmhtemdouWKoOi9veWujOaIkOeahOaXtuWAme+8jOS4u+WKqOi/m+ihjOWxj+W5leeahOmAgumFjQ0KICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpDQogIH0sDQogIGRlc3Ryb3llZCAoKSB7DQogICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVJZCkNCiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKQ0KICAgIHRoaXMuJHNvY2tldC51blJlZ2lzdGVyQ2FsbEJhY2soJ3NlbGxlckRhdGEnKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgLy8g5Yid5aeL5YyWZWNoYXJ0c2luc3RhbmNl5a+56LGhDQogICAgaW5pdENoYXJ0ICgpIHsNCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZSA9IHRoaXMuJGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLnNlbGxlcl9yZWYsIHRoaXMudGhlbWUpDQogICAgICAvLyDlr7nlm77ooajliJ3lp4vljJbphY3nva7nmoTmjqfliLYNCiAgICAgIGNvbnN0IGluaXRPcHRpb24gPSB7DQogICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgdGV4dDogJ+KUgyDllYblrrbplIDllK7nu5/orqEnLA0KICAgICAgICAgIGxlZnQ6IDIwLA0KICAgICAgICAgIHRvcDogMjANCiAgICAgICAgfSwNCiAgICAgICAgZ3JpZDogew0KICAgICAgICAgIHRvcDogJzIwJScsDQogICAgICAgICAgbGVmdDogJzMlJywNCiAgICAgICAgICByaWdodDogJzYlJywNCiAgICAgICAgICBib3R0b206ICczJScsDQogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlIC8vIOi3neemu+aYr+WMheWQq+WdkOagh+i9tOS4iueahOaWh+Wtlw0KICAgICAgICB9LA0KICAgICAgICB4QXhpczogew0KICAgICAgICAgIHR5cGU6ICd2YWx1ZScNCiAgICAgICAgfSwNCiAgICAgICAgeUF4aXM6IHsNCiAgICAgICAgICB0eXBlOiAnY2F0ZWdvcnknDQogICAgICAgIH0sDQogICAgICAgIHRvb2x0aXA6IHsNCiAgICAgICAgICB0cmlnZ2VyOiAnYXhpcycsDQogICAgICAgICAgYXhpc1BvaW50ZXI6IHsNCiAgICAgICAgICAgIHR5cGU6ICdsaW5lJywNCiAgICAgICAgICAgIHo6IDAsDQogICAgICAgICAgICBsaW5lU3R5bGU6IHsNCiAgICAgICAgICAgICAgY29sb3I6ICcjMkQzNDQzJw0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgdHlwZTogJ2JhcicsDQogICAgICAgICAgICBsYWJlbDogew0KICAgICAgICAgICAgICBzaG93OiB0cnVlLA0KICAgICAgICAgICAgICBwb3NpdG9uOiAncmlnaHQnLA0KICAgICAgICAgICAgICB0ZXh0U3R5bGU6IHsNCiAgICAgICAgICAgICAgICBjb2xvcjogJ3doaXRlJw0KICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgaXRlbVN0eWxlOiB7DQogICAgICAgICAgICAgIC8vIOaMh+aYjuminOiJsua4kOWPmOeahOaWueWQkQ0KICAgICAgICAgICAgICAvLyDmjIfmmI7kuI3lkIznmb7liIbmr5TkuYvkuIvpopzoibLnmoTlgLwNCiAgICAgICAgICAgICAgY29sb3I6IG5ldyB0aGlzLiRlY2hhcnRzLmdyYXBoaWMuTGluZWFyR3JhZGllbnQoMCwgMCwgMSwgMCwgWw0KICAgICAgICAgICAgICAgIC8vIOeZvuWIhuS5izDnirbmgIHkuIvnmoTpopzoibLlgLwNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsDQogICAgICAgICAgICAgICAgICBjb2xvcjogJyM1MDUyRUUnDQogICAgICAgICAgICAgICAgfSwNCiAgICAgICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgICBvZmZzZXQ6IDEsDQogICAgICAgICAgICAgICAgICBjb2xvcjogJyNBQjZFRTUnDQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICBdKQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgIH0NCiAgICAgICAgXQ0KICAgICAgfQ0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihpbml0T3B0aW9uKQ0KICAgICAgLy8g5a+55Zu+6KGo5a+56LGh6L+b6KGM6byg5qCH5LqL5Lu255qE55uR5ZCsDQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uub24oJ21vdXNlb3ZlcicsICgpID0+IHsNCiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVJZCkNCiAgICAgIH0pDQogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uub24oJ21vdXNlb3V0JywgKCkgPT4gew0KICAgICAgICB0aGlzLnN0YXJ0SW50ZXJ2YWwoKQ0KICAgICAgfSkNCiAgICB9LA0KDQogICAgLy8g6I635Y+W5pyN5Yqh5Zmo55qE5pWw5o2uDQogICAgLy8gYXN5bmMgZ2V0RGF0ZSAoKSB7DQogICAgZ2V0RGF0YSAocmV0KSB7DQogICAgICAvLyBodHRwOi8vMTI3LjAuMC4xLzg4ODgvYXBpL3NlbGxlcg0KICAgICAgLy8gY29uc3QgeyBkYXRhOiByZXMgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCdzZWxsZXInKQ0KICAgICAgLy8gY29uc29sZS5sb2cocmVzKQ0KICAgICAgdGhpcy5hbGxEYXRhID0gcmV0DQogICAgICB0aGlzLmFsbERhdGEuc29ydCgoYSwgYikgPT4gew0KICAgICAgICByZXR1cm4gYS52YWx1ZSAtIGIudmFsdWUNCiAgICAgIH0pDQogICAgICAvLyDmr4/kupTkuKrlhYPntKDmmL7npLrkuIDpobUNCiAgICAgIHRoaXMudG90YWxQYWdlID0gdGhpcy5hbGxEYXRhLmxlbmd0aCAlIDUgPT09IDAgPyB0aGlzLmFsbERhdGEubGVuZ3RoIC8gNSA6IHRoaXMuYWxsRGF0YS5sZW5ndGggLyA1ICsgMQ0KICAgICAgdGhpcy51cGRhdGVkQ2hhcnQoKQ0KICAgICAgLy8g5ZCv5Yqo5a6a5pe25ZmoDQogICAgICB0aGlzLnN0YXJ0SW50ZXJ2YWwoKQ0KICAgIH0sDQoNCiAgICAvLyDmm7TmlrDlm77ooagNCiAgICB1cGRhdGVkQ2hhcnQgKCkgew0KICAgICAgY29uc3Qgc3RhcnQgPSAodGhpcy5jdXJyZW50UGFnZSAtIDEpICogNSAvLyAwDQogICAgICBjb25zdCBlbmQgPSB0aGlzLmN1cnJlbnRQYWdlICogNSAvLyA1DQogICAgICBjb25zdCBzaG93RGF0YSA9IHRoaXMuYWxsRGF0YS5zbGljZShzdGFydCwgZW5kKQ0KICAgICAgLy8g5aSE55CG5pWw5o2u5bm25LiU5pu05paw55WM6Z2i5Zu+6KGoDQogICAgICBjb25zdCBzZWxsZXJOYW1lcyA9IHNob3dEYXRhLm1hcCgoaXRlbSkgPT4gew0KICAgICAgICByZXR1cm4gaXRlbS5uYW1lDQogICAgICB9KQ0KICAgICAgY29uc3Qgc2VsbGVyVmFsdWVzID0gc2hvd0RhdGEubWFwKChpdGVtKSA9PiB7DQogICAgICAgIHJldHVybiBpdGVtLnZhbHVlDQogICAgICB9KQ0KICAgICAgY29uc3QgZGF0YU9wdGlvbiA9IHsNCiAgICAgICAgeUF4aXM6IHsNCiAgICAgICAgICBkYXRhOiBzZWxsZXJOYW1lcw0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICBkYXRhOiBzZWxsZXJWYWx1ZXMNCiAgICAgICAgICB9DQogICAgICAgIF0NCiAgICAgIH0NCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oZGF0YU9wdGlvbikNCiAgICB9LA0KICAgIHN0YXJ0SW50ZXJ2YWwgKCkgew0KICAgICAgaWYgKHRoaXMudGltZUlkKSB7DQogICAgICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lSWQpDQogICAgICB9DQogICAgICB0aGlzLnRpbWVJZCA9IHNldEludGVydmFsKCgpID0+IHsNCiAgICAgICAgdGhpcy5jdXJyZW50UGFnZSsrDQogICAgICAgIGlmICh0aGlzLmN1cnJlbnRQYWdlID4gdGhpcy50b3RhbFBhZ2UpIHsNCiAgICAgICAgICB0aGlzLmN1cnJlbnRQYWdlID0gMQ0KICAgICAgICB9DQogICAgICAgIHRoaXMudXBkYXRlZENoYXJ0KCkNCiAgICAgIH0sIDMwMDApDQogICAgfSwNCiAgICAvLyDlkozliIbovqjnjoflpKflsI/nmoTphY3nva4NCiAgICBzY3JlZW5BZGFwdGVyICgpIHsNCiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuJHJlZnMuc2VsbGVyX3JlZi5vZmZzZXRXaWR0aCk7DQogICAgICBjb25zdCB0aXRsZUZvbnRTaXplID0gdGhpcy4kcmVmcy5zZWxsZXJfcmVmLm9mZnNldFdpZHRoIC8gMTAwICogMy42DQogICAgICBjb25zdCBhZGFwdGVyT3B0aW9uID0gew0KICAgICAgICB0aXRsZTogew0KDQogICAgICAgICAgdGV4dFN0eWxlOiB7DQogICAgICAgICAgICBmb250U2l6ZTogdGl0bGVGb250U2l6ZQ0KICAgICAgICAgIH0NCiAgICAgICAgfSwNCiAgICAgICAgdG9vbHRpcDogew0KICAgICAgICAgIGF4aXNQb2ludGVyOiB7DQogICAgICAgICAgICB0eXBlOiAnbGluZScsDQogICAgICAgICAgICBsaW5lU3R5bGU6IHsNCiAgICAgICAgICAgICAgd2lkdGg6IHRpdGxlRm9udFNpemUNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIHNlcmllczogWw0KICAgICAgICAgIHsNCiAgICAgICAgICAgIGJhcldpZHRoOiB0aXRsZUZvbnRTaXplLA0KICAgICAgICAgICAgaXRlbVN0eWxlOiB7DQogICAgICAgICAgICAgIGJhckJvcmRlclJhZGl1czogWzAsIHRpdGxlRm9udFNpemUgLyAyLCB0aXRsZUZvbnRTaXplIC8gMiwgMF0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIF0NCiAgICAgIH0NCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oYWRhcHRlck9wdGlvbikNCiAgICAgIC8vICAg5omL5Yqo55qE6LCD55So5Zu+6KGo5a+56LGh55qEIHJlc2l6ZSDmiY3og73kuqfnlJ/mlYjmnpwNCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5yZXNpemUoKQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["Seller.vue"],"names":[],"mappingsfile":"Seller.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <!-- 商家销售统计的横向柱状图 -->\r\n    <div class=\"com-container\">\r\n        <div class=\"com-chart\" ref=\"seller_ref\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n  data () {\r\n    return {\r\n      chartInstance: null, // charts实例对象\r\n      allData: [], // 服务器返回的数据\r\n      currentPage: 1, // 当前显示的页数\r\n      totalPage: 0, // 一共多少页\r\n      timeId: null // 定时器的标识\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['theme'])\r\n  },\r\n  watch: {\r\n    theme () {\r\n      this.chartInstance.dispose()\r\n      this.initChart()\r\n      this.screenAdapter()\r\n      this.updatedChart()\r\n    }\r\n  },\r\n  created () {\r\n    // 在组件创建完成之后，进行回调函数的注册\r\n    this.$socket.registerCallBack('sellerData', this.getData)\r\n  },\r\n  mounted () {\r\n    this.initChart()\r\n    // this.getDate()\r\n    this.$socket.send({\r\n      action: 'getData',\r\n      socketType: 'sellerData',\r\n      charName: 'seller',\r\n      value: ''\r\n    })\r\n    window.addEventListener('resize', this.screenAdapter)\r\n    // 在页面加载完成的时候，主动进行屏幕的适配\r\n    this.screenAdapter()\r\n  },\r\n  destroyed () {\r\n    clearInterval(this.timeId)\r\n    window.removeEventListener('resize', this.screenAdapter)\r\n    this.$socket.unRegisterCallBack('sellerData')\r\n  },\r\n  methods: {\r\n    // 初始化echartsinstance对象\r\n    initChart () {\r\n      this.chartInstance = this.$echarts.init(this.$refs.seller_ref, this.theme)\r\n      // 对图表初始化配置的控制\r\n      const initOption = {\r\n        title: {\r\n          text: '┃ 商家销售统计',\r\n          left: 20,\r\n          top: 20\r\n        },\r\n        grid: {\r\n          top: '20%',\r\n          left: '3%',\r\n          right: '6%',\r\n          bottom: '3%',\r\n          containLabel: true // 距离是包含坐标轴上的文字\r\n        },\r\n        xAxis: {\r\n          type: 'value'\r\n        },\r\n        yAxis: {\r\n          type: 'category'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'line',\r\n            z: 0,\r\n            lineStyle: {\r\n              color: '#2D3443'\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            type: 'bar',\r\n            label: {\r\n              show: true,\r\n              positon: 'right',\r\n              textStyle: {\r\n                color: 'white'\r\n              }\r\n            },\r\n            itemStyle: {\r\n              // 指明颜色渐变的方向\r\n              // 指明不同百分比之下颜色的值\r\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                // 百分之0状态下的颜色值\r\n                {\r\n                  offset: 0,\r\n                  color: '#5052EE'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: '#AB6EE5'\r\n                }\r\n              ])\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(initOption)\r\n      // 对图表对象进行鼠标事件的监听\r\n      this.chartInstance.on('mouseover', () => {\r\n        clearInterval(this.timeId)\r\n      })\r\n      this.chartInstance.on('mouseout', () => {\r\n        this.startInterval()\r\n      })\r\n    },\r\n\r\n    // 获取服务器的数据\r\n    // async getDate () {\r\n    getData (ret) {\r\n      // http://127.0.0.1/8888/api/seller\r\n      // const { data: res } = await this.$http.get('seller')\r\n      // console.log(res)\r\n      this.allData = ret\r\n      this.allData.sort((a, b) => {\r\n        return a.value - b.value\r\n      })\r\n      // 每五个元素显示一页\r\n      this.totalPage = this.allData.length % 5 === 0 ? this.allData.length / 5 : this.allData.length / 5 + 1\r\n      this.updatedChart()\r\n      // 启动定时器\r\n      this.startInterval()\r\n    },\r\n\r\n    // 更新图表\r\n    updatedChart () {\r\n      const start = (this.currentPage - 1) * 5 // 0\r\n      const end = this.currentPage * 5 // 5\r\n      const showData = this.allData.slice(start, end)\r\n      // 处理数据并且更新界面图表\r\n      const sellerNames = showData.map((item) => {\r\n        return item.name\r\n      })\r\n      const sellerValues = showData.map((item) => {\r\n        return item.value\r\n      })\r\n      const dataOption = {\r\n        yAxis: {\r\n          data: sellerNames\r\n        },\r\n        series: [\r\n          {\r\n            data: sellerValues\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(dataOption)\r\n    },\r\n    startInterval () {\r\n      if (this.timeId) {\r\n        clearInterval(this.timeId)\r\n      }\r\n      this.timeId = setInterval(() => {\r\n        this.currentPage++\r\n        if (this.currentPage > this.totalPage) {\r\n          this.currentPage = 1\r\n        }\r\n        this.updatedChart()\r\n      }, 3000)\r\n    },\r\n    // 和分辨率大小的配置\r\n    screenAdapter () {\r\n      // console.log(this.$refs.seller_ref.offsetWidth);\r\n      const titleFontSize = this.$refs.seller_ref.offsetWidth / 100 * 3.6\r\n      const adapterOption = {\r\n        title: {\r\n\r\n          textStyle: {\r\n            fontSize: titleFontSize\r\n          }\r\n        },\r\n        tooltip: {\r\n          axisPointer: {\r\n            type: 'line',\r\n            lineStyle: {\r\n              width: titleFontSize\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            barWidth: titleFontSize,\r\n            itemStyle: {\r\n              barBorderRadius: [0, titleFontSize / 2, titleFontSize / 2, 0]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(adapterOption)\r\n      //   手动的调用图表对象的 resize 才能产生效果\r\n      this.chartInstance.resize()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"]}]}