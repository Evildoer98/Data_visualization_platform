{"remainingRequest":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Stock.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Stock.vue","mtime":1616858231864},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\babel-loader\\lib\\index.js","mtime":1615108034142},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js","mtime":1615108060518}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Stock.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 库存与销量模块（多个圆环饼图） -->\r\n<template>\r\n    <div class=\"com-container\">\r\n        <div class=\"com-chart\" ref=\"stock_ref\">\r\n\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      chartInstance: null,\r\n      allData: null,\r\n      currentIndex: 0, // 当前显示的数据\r\n      timeId: null, // 定时器的标识\r\n      titleFontSize: 0\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['theme'])\r\n  },\r\n  watch: {\r\n    theme () {\r\n      this.chartInstance.dispose()\r\n      this.initChart()\r\n      this.screenAdapter()\r\n      this.updateChart()\r\n    }\r\n  },\r\n  created () {\r\n    // 在组件创建完成之后，进行回调函数的注册\r\n    this.$socket.registerCallBack('stockData', this.getData)\r\n  },\r\n  mounted () {\r\n    this.initChart()\r\n    // this.getData()\r\n    this.$socket.send({\r\n      action: 'getData',\r\n      socketType: 'stockData',\r\n      charName: 'stock',\r\n      value: ''\r\n    })\r\n    window.addEventListener('resize', this.screenAdapter)\r\n    this.screenAdapter()\r\n  },\r\n  destroyed () {\r\n    window.removeEventListener('resize', this.screenAdapter)\r\n    clearInterval(this.timeId)\r\n    this.$socket.unRegisterCallBack('stockData')\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      this.chartInstance = this.$echarts.init(this.$refs.stock_ref, this.theme)\r\n      // 5个圆环对应的圆心点\r\n      const centerPointers = [\r\n        ['18%', '40%'],\r\n        ['50%', '40%'],\r\n        ['82%', '40%'],\r\n        ['34%', '75%'],\r\n        ['66%', '75%']\r\n      ]\r\n      const initOption = {\r\n        title: {\r\n          text: '┃ 库存销售量',\r\n          left: 20,\r\n          top: 20\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            center: centerPointers[0],\r\n            hoverAnimation: false,\r\n            label: {\r\n              show: true,\r\n              position: 'center'\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            }\r\n          }, {\r\n            type: 'pie',\r\n            center: centerPointers[1],\r\n            hoverAnimation: false,\r\n            label: {\r\n              show: true,\r\n              position: 'center'\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            }\r\n          },\r\n          {\r\n            type: 'pie',\r\n            center: centerPointers[2],\r\n            hoverAnimation: false,\r\n            label: {\r\n              show: true,\r\n              position: 'center'\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            }\r\n          },\r\n          {\r\n            type: 'pie',\r\n            center: centerPointers[3],\r\n            hoverAnimation: false,\r\n            label: {\r\n              show: true,\r\n              position: 'center'\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            }\r\n          },\r\n          {\r\n            type: 'pie',\r\n            center: centerPointers[4],\r\n            hoverAnimation: false,\r\n            label: {\r\n              show: true,\r\n              position: 'center'\r\n            },\r\n            labelLine: {\r\n              show: false\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(initOption)\r\n      this.chartInstance.on('mouseover', () => {\r\n        clearInterval(this.timeId)\r\n      })\r\n      this.chartInstance.on('mouseout', () => {\r\n        this.startInterval()\r\n      })\r\n    },\r\n    // async getData () {\r\n    getData (ret) {\r\n      // const { data: ret } = await this.$http.get('stock')\r\n      this.allData = ret\r\n      this.updatedChart()\r\n      this.startInterval()\r\n    },\r\n    updatedChart () {\r\n      // 处理图表需要的数据\r\n\r\n      // 增加5个圆环的渐变颜色范围\r\n      const colorArrs = [\r\n        ['#4FF778', '#0BA82C'],\r\n        ['#E5DD45', '#E8B11C'],\r\n        ['#E8821C', '#E55445'],\r\n        ['#5052EE', '#AB6EE5'],\r\n        ['#23E5E5', '#2E72BF']\r\n      ]\r\n      const start = this.currentIndex * 5\r\n      const end = (this.currentIndex + 1) * 5\r\n      const showData = this.allData.slice(start, end)\r\n      const seriesArr = showData.map((item, index) => {\r\n        return {\r\n          label: {\r\n            color: colorArrs[index][0]\r\n          },\r\n          data: [\r\n            {\r\n              name: item.name + '\\n\\n' + item.sales,\r\n              value: item.sales,\r\n              itemStyle: {\r\n                color: new this.$echarts.graphic.LinearGradient(0, 1, 0, 0,\r\n                  [\r\n                    {\r\n                      offset: 0,\r\n                      color: colorArrs[index][0]\r\n                    },\r\n                    {\r\n                      offset: 1,\r\n                      color: colorArrs[index][1]\r\n                    }\r\n                  ])\r\n              }\r\n            },\r\n            {\r\n              value: item.stock,\r\n              itemStyle: {\r\n                color: '#333843'\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      })\r\n      const dataOption = {\r\n        series: seriesArr\r\n      }\r\n      this.chartInstance.setOption(dataOption)\r\n    },\r\n    screenAdapter () {\r\n      this.titleFontSize = this.$refs.stock_ref.offsetWidth / 100 * 3.6\r\n      const innerRadius = this.titleFontSize * 2.8\r\n      const outterRadius = innerRadius * 1.125\r\n      const adapterOption = {\r\n        title: {\r\n          textStyle: {\r\n            fontSize: this.titleFontSize\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            radius: [outterRadius, innerRadius],\r\n            label: {\r\n              fontSize: this.titleFontSize / 2\r\n            }\r\n          },\r\n          {\r\n            radius: [outterRadius, innerRadius],\r\n            label: {\r\n              fontSize: this.titleFontSize / 2\r\n            }\r\n          },\r\n          {\r\n            radius: [outterRadius, innerRadius],\r\n            label: {\r\n              fontSize: this.titleFontSize / 2\r\n            }\r\n          },\r\n          {\r\n\r\n            radius: [outterRadius, innerRadius],\r\n            label: {\r\n              fontSize: this.titleFontSize / 2\r\n            }\r\n          },\r\n          {\r\n\r\n            radius: [outterRadius, innerRadius],\r\n            label: {\r\n              fontSize: this.titleFontSize / 2\r\n            }\r\n          }\r\n        ]\r\n\r\n      }\r\n      this.chartInstance.setOption(adapterOption)\r\n      this.chartInstance.resize()\r\n    },\r\n    startInterval () {\r\n      if (this.timeId) {\r\n        clearInterval(this.timeId)\r\n      }\r\n      this.timeId = setInterval(() => {\r\n        this.currentIndex++\r\n        if (this.currentIndex > 1) {\r\n          this.currentIndex = 0\r\n        }\r\n        this.updatedChart() // 在更改完currentIndex之后，需要跟新界面\r\n      }, 5000)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components"}]}