{"remainingRequest":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Hot.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Hot.vue","mtime":1616899509318},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\babel-loader\\lib\\index.js","mtime":1615108034142},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js","mtime":1615108060518}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnDQppbXBvcnQgeyBnZXRUaGVtZVZhbHVlIH0gZnJvbSAnQC91dGlscy90aGVtZV91dGlscycNCmV4cG9ydCBkZWZhdWx0IHsNCiAgZGF0YSAoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGNoYXJ0SW5zdGFuY2U6IG51bGwsDQogICAgICBhbGxEYXRhOiBudWxsLA0KICAgICAgY3VycmVudEluZGV4OiAwLCAvLyDlvZPliY3miYDlsZXnpLrnmoTkuIDnuqfmlbDmja4NCiAgICAgIHRpdGxlRm9udFNpemU6IDANCiAgICB9DQogIH0sDQogIGNyZWF0ZWQgKCkgew0KICAgIC8vIOWcqOe7hOS7tuWIm+W7uuWujOaIkOS5i+WQju+8jOi/m+ihjOWbnuiwg+WHveaVsOeahOazqOWGjA0KICAgIHRoaXMuJHNvY2tldC5yZWdpc3RlckNhbGxCYWNrKCdob3REYXRhJywgdGhpcy5nZXREYXRhKQ0KICB9LA0KICBtb3VudGVkICgpIHsNCiAgICB0aGlzLmluaXRDaGFydCgpDQogICAgLy8gdGhpcy5nZXREYXRhKCkNCiAgICB0aGlzLiRzb2NrZXQuc2VuZCh7DQogICAgICBhY3Rpb246ICdnZXREYXRhJywNCiAgICAgIHNvY2tldFR5cGU6ICdob3REYXRhJywNCiAgICAgIGNoYXJOYW1lOiAnaG90cHJvZHVjdCcsDQogICAgICB2YWx1ZTogJycNCiAgICB9KQ0KICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpDQogICAgdGhpcy5zY3JlZW5BZGFwdGVyKCkNCiAgfSwNCiAgZGVzdHJveWVkICgpIHsNCiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKQ0KICAgIHRoaXMuJHNvY2tldC51blJlZ2lzdGVyQ2FsbEJhY2soJ2hvdERhdGEnKQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIGNhdE5hbWUgKCkgew0KICAgICAgaWYgKCF0aGlzLmFsbERhdGEpIHsNCiAgICAgICAgcmV0dXJuICcnDQogICAgICB9IGVsc2Ugew0KICAgICAgICByZXR1cm4gdGhpcy5hbGxEYXRhW3RoaXMuY3VycmVudEluZGV4XS5uYW1lDQogICAgICB9DQogICAgfSwNCiAgICBjb21TdHlsZSAoKSB7DQogICAgICByZXR1cm4gew0KICAgICAgICBmb250U2l6ZTogdGhpcy50aXRsZUZvbnRTaXplICsgJ3B4JywNCiAgICAgICAgY29sb3I6IGdldFRoZW1lVmFsdWUodGhpcy50aGVtZSkudGl0bGVDb2xvcg0KICAgICAgfQ0KICAgIH0sDQogICAgLi4ubWFwU3RhdGUoWyd0aGVtZSddKQ0KICB9LA0KICB3YXRjaDogew0KICAgIHRoZW1lICgpIHsNCiAgICAgIC8vIGNvbnNvbGUubG9nKCfkuLvpopjliIfmjaLkuoYnKQ0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLmRpc3Bvc2UoKQ0KICAgICAgdGhpcy5pbml0Q2hhcnQoKQ0KICAgICAgdGhpcy5zY3JlZW5BZGFwdGVyKCkNCiAgICAgIHRoaXMudXBkYXRlZENoYXJ0KCkNCiAgICB9DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBpbml0Q2hhcnQgKCkgew0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuaG90X3JlZiwgdGhpcy50aGVtZSkNCiAgICAgIGNvbnN0IGluaXRPcHRpb24gPSB7DQogICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgdGV4dDogJ+KUgyDng63plIDllYblk4HnmoTljaDmr5QnLA0KICAgICAgICAgIGxlZnQ6IDIwLA0KICAgICAgICAgIHRvcDogMjANCiAgICAgICAgfSwNCiAgICAgICAgbGVnZW5kOiB7DQogICAgICAgICAgdG9wOiAnMTUlJywNCiAgICAgICAgICBpY29uOiAnY2lyY2xlJw0KICAgICAgICB9LA0KICAgICAgICB0b29sdGlwOiB7DQogICAgICAgICAgc2hvdzogdHJ1ZSwNCiAgICAgICAgICBmb3JtYXR0ZXI6IGFyZyA9PiB7DQogICAgICAgICAgICBjb25zdCB0aGlyZENhdGVnb3J5ID0gYXJnLmRhdGEuY2hpbGRyZW4NCiAgICAgICAgICAgIC8vIOiuoeeul+WHuuaJgOacieS4iee6p+WIhuexu+eahOaVsOWAvOe7vOWQiA0KICAgICAgICAgICAgbGV0IHRvdGFsID0gMA0KICAgICAgICAgICAgdGhpcmRDYXRlZ29yeS5mb3JFYWNoKGl0ZW0gPT4gew0KICAgICAgICAgICAgICB0b3RhbCArPSBpdGVtLnZhbHVlDQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgbGV0IHJldFN0ciA9ICcnDQogICAgICAgICAgICB0aGlyZENhdGVnb3J5LmZvckVhY2goaXRlbSA9PiB7DQogICAgICAgICAgICAgIHJldFN0ciArPSBgDQogICAgICAgICAgICAgICAgJHtpdGVtLm5hbWV9IDogJHtwYXJzZUludChpdGVtLnZhbHVlIC8gdG90YWwgKiAxMDApICsgJyUnfQ0KICAgICAgICAgICAgICAgIDxici8+DQogICAgICAgICAgICAgIGANCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICByZXR1cm4gcmV0U3RyDQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IFsNCiAgICAgICAgICB7DQogICAgICAgICAgICB0eXBlOiAncGllJywNCiAgICAgICAgICAgIGxhYmVsOiB7DQogICAgICAgICAgICAgIHNob3c6IGZhbHNlDQogICAgICAgICAgICB9LA0KICAgICAgICAgICAgZW1waGFzaXM6IHsNCiAgICAgICAgICAgICAgbGFiZWw6IHsNCiAgICAgICAgICAgICAgICBzaG93OiB0cnVlDQogICAgICAgICAgICAgIH0sDQogICAgICAgICAgICAgIGxhYmVsTGluZTogew0KICAgICAgICAgICAgICAgIHNob3c6IGZhbHNlDQogICAgICAgICAgICAgIH0NCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgICAgIF0NCiAgICAgIH0NCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oaW5pdE9wdGlvbikNCiAgICB9LA0KICAgIC8vIGFzeW5jIGdldERhdGEgKCkgew0KICAgIGdldERhdGEgKHJldCkgew0KICAgICAgLy8gY29uc3QgeyBkYXRhOiByZXQgfSA9IGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCdob3Rwcm9kdWN0JykNCiAgICAgIHRoaXMuYWxsRGF0YSA9IHJldA0KICAgICAgdGhpcy51cGRhdGVkQ2hhcnQoKQ0KICAgIH0sDQogICAgdXBkYXRlZENoYXJ0ICgpIHsNCiAgICAgIGNvbnN0IGxlZ2VuZERhdGEgPSB0aGlzLmFsbERhdGFbdGhpcy5jdXJyZW50SW5kZXhdLmNoaWxkcmVuLm1hcChpdGVtID0+IHsNCiAgICAgICAgcmV0dXJuIGl0ZW0ubmFtZQ0KICAgICAgfSkNCiAgICAgIGNvbnN0IHNlcmllc0RhdGEgPSB0aGlzLmFsbERhdGFbdGhpcy5jdXJyZW50SW5kZXhdLmNoaWxkcmVuLm1hcChpdGVtID0+IHsNCiAgICAgICAgcmV0dXJuIHsNCiAgICAgICAgICBuYW1lOiBpdGVtLm5hbWUsDQogICAgICAgICAgdmFsdWU6IGl0ZW0udmFsdWUsDQogICAgICAgICAgY2hpbGRyZW46IGl0ZW0uY2hpbGRyZW4NCiAgICAgICAgfQ0KICAgICAgfSkNCiAgICAgIGNvbnN0IGRhdGFPcHRpb24gPSB7DQogICAgICAgIGxlZ2VuZDogew0KICAgICAgICAgIGRhdGE6IGxlZ2VuZERhdGENCiAgICAgICAgfSwNCiAgICAgICAgc2VyaWVzOiBbDQogICAgICAgICAgew0KICAgICAgICAgICAgZGF0YTogc2VyaWVzRGF0YQ0KICAgICAgICAgIH0NCiAgICAgICAgXQ0KICAgICAgfQ0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihkYXRhT3B0aW9uKQ0KICAgIH0sDQogICAgc2NyZWVuQWRhcHRlciAoKSB7DQogICAgICB0aGlzLnRpdGxlRm9udFNpemUgPSB0aGlzLiRyZWZzLmhvdF9yZWYub2Zmc2V0V2lkdGggLyAxMDAgKiAzLjYNCiAgICAgIGNvbnN0IGFkYXB0ZXJPcHRpb24gPSB7DQogICAgICAgIHRpdGxlOiB7DQogICAgICAgICAgdGV4dFN0eWxlOiB7DQogICAgICAgICAgICBmb250U2l6ZTogdGhpcy50aXRsZUZvbnRTaXplDQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBzZXJpZXM6IHsNCiAgICAgICAgICByYWRpdXM6IHRoaXMudGl0bGVGb250U2l6ZSAqIDQuNSwNCiAgICAgICAgICBjZW50ZXI6IFsnNTAlJywgJzYwJSddDQogICAgICAgIH0sDQogICAgICAgIGxlZ2VuZDogew0KICAgICAgICAgIGl0ZW1XaWR0aDogdGhpcy50aXRsZUZvbnRTaXplLA0KICAgICAgICAgIGl0ZW1IaWdodDogdGhpcy50aXRsZUZvbnRTaXplLA0KICAgICAgICAgIGl0ZW1HYXA6IHRoaXMudGl0bGVGb250U2l6ZSAvIDIsDQogICAgICAgICAgdGV4dFN0eWxlOiB7DQogICAgICAgICAgICBmb250U2l6ZTogdGhpcy50aXRsZUZvbnRTaXplIC8gMg0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihhZGFwdGVyT3B0aW9uKQ0KICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnJlc2l6ZSgpDQogICAgfSwNCiAgICB0b0xlZnQgKCkgew0KICAgICAgdGhpcy5jdXJyZW50SW5kZXgtLQ0KICAgICAgaWYgKHRoaXMuY3VycmVudEluZGV4IDwgMCkgew0KICAgICAgICB0aGlzLmN1cnJlbnRJbmRleCA9IHRoaXMuYWxsRGF0YS5sZW5ndGggLSAxDQogICAgICB9DQogICAgICB0aGlzLnVwZGF0ZWRDaGFydCgpDQogICAgfSwNCiAgICB0b1JpZ2h0ICgpIHsNCiAgICAgIHRoaXMuY3VycmVudEluZGV4KysNCiAgICAgIGlmICh0aGlzLmN1cnJlbnRJbmRleCA+IHRoaXMuYWxsRGF0YS5sZW5ndGggLSAxKSB7DQogICAgICAgIHRoaXMuY3VycmVudEluZGV4ID0gMA0KICAgICAgfQ0KICAgICAgdGhpcy51cGRhdGVkQ2hhcnQoKQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["Hot.vue"],"names":[],"mappingsfile":"Hot.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"com-container\">\r\n        <div class=\"com-chart\" ref=\"hot_ref\"></div>\r\n        <span class=\"iconfont arr-left\" @click=\"toLeft\" :style=\"comStyle\">&#xe6ef;</span>\r\n        <span class=\"iconfont arr-right\" @click=\"toRight\" :style=\"comStyle\">&#xe6ed;</span>\r\n        <span class=\"cat-name\" :style=\"comStyle\">{{catName}}</span>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport { getThemeValue } from '@/utils/theme_utils'\r\nexport default {\r\n  data () {\r\n    return {\r\n      chartInstance: null,\r\n      allData: null,\r\n      currentIndex: 0, // 当前所展示的一级数据\r\n      titleFontSize: 0\r\n    }\r\n  },\r\n  created () {\r\n    // 在组件创建完成之后，进行回调函数的注册\r\n    this.$socket.registerCallBack('hotData', this.getData)\r\n  },\r\n  mounted () {\r\n    this.initChart()\r\n    // this.getData()\r\n    this.$socket.send({\r\n      action: 'getData',\r\n      socketType: 'hotData',\r\n      charName: 'hotproduct',\r\n      value: ''\r\n    })\r\n    window.addEventListener('resize', this.screenAdapter)\r\n    this.screenAdapter()\r\n  },\r\n  destroyed () {\r\n    window.removeEventListener('resize', this.screenAdapter)\r\n    this.$socket.unRegisterCallBack('hotData')\r\n  },\r\n  computed: {\r\n    catName () {\r\n      if (!this.allData) {\r\n        return ''\r\n      } else {\r\n        return this.allData[this.currentIndex].name\r\n      }\r\n    },\r\n    comStyle () {\r\n      return {\r\n        fontSize: this.titleFontSize + 'px',\r\n        color: getThemeValue(this.theme).titleColor\r\n      }\r\n    },\r\n    ...mapState(['theme'])\r\n  },\r\n  watch: {\r\n    theme () {\r\n      // console.log('主题切换了')\r\n      this.chartInstance.dispose()\r\n      this.initChart()\r\n      this.screenAdapter()\r\n      this.updatedChart()\r\n    }\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      this.chartInstance = this.$echarts.init(this.$refs.hot_ref, this.theme)\r\n      const initOption = {\r\n        title: {\r\n          text: '┃ 热销商品的占比',\r\n          left: 20,\r\n          top: 20\r\n        },\r\n        legend: {\r\n          top: '15%',\r\n          icon: 'circle'\r\n        },\r\n        tooltip: {\r\n          show: true,\r\n          formatter: arg => {\r\n            const thirdCategory = arg.data.children\r\n            // 计算出所有三级分类的数值综合\r\n            let total = 0\r\n            thirdCategory.forEach(item => {\r\n              total += item.value\r\n            })\r\n            let retStr = ''\r\n            thirdCategory.forEach(item => {\r\n              retStr += `\r\n                ${item.name} : ${parseInt(item.value / total * 100) + '%'}\r\n                <br/>\r\n              `\r\n            })\r\n            return retStr\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            type: 'pie',\r\n            label: {\r\n              show: false\r\n            },\r\n            emphasis: {\r\n              label: {\r\n                show: true\r\n              },\r\n              labelLine: {\r\n                show: false\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(initOption)\r\n    },\r\n    // async getData () {\r\n    getData (ret) {\r\n      // const { data: ret } = await this.$http.get('hotproduct')\r\n      this.allData = ret\r\n      this.updatedChart()\r\n    },\r\n    updatedChart () {\r\n      const legendData = this.allData[this.currentIndex].children.map(item => {\r\n        return item.name\r\n      })\r\n      const seriesData = this.allData[this.currentIndex].children.map(item => {\r\n        return {\r\n          name: item.name,\r\n          value: item.value,\r\n          children: item.children\r\n        }\r\n      })\r\n      const dataOption = {\r\n        legend: {\r\n          data: legendData\r\n        },\r\n        series: [\r\n          {\r\n            data: seriesData\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(dataOption)\r\n    },\r\n    screenAdapter () {\r\n      this.titleFontSize = this.$refs.hot_ref.offsetWidth / 100 * 3.6\r\n      const adapterOption = {\r\n        title: {\r\n          textStyle: {\r\n            fontSize: this.titleFontSize\r\n          }\r\n        },\r\n        series: {\r\n          radius: this.titleFontSize * 4.5,\r\n          center: ['50%', '60%']\r\n        },\r\n        legend: {\r\n          itemWidth: this.titleFontSize,\r\n          itemHight: this.titleFontSize,\r\n          itemGap: this.titleFontSize / 2,\r\n          textStyle: {\r\n            fontSize: this.titleFontSize / 2\r\n          }\r\n        }\r\n      }\r\n      this.chartInstance.setOption(adapterOption)\r\n      this.chartInstance.resize()\r\n    },\r\n    toLeft () {\r\n      this.currentIndex--\r\n      if (this.currentIndex < 0) {\r\n        this.currentIndex = this.allData.length - 1\r\n      }\r\n      this.updatedChart()\r\n    },\r\n    toRight () {\r\n      this.currentIndex++\r\n      if (this.currentIndex > this.allData.length - 1) {\r\n        this.currentIndex = 0\r\n      }\r\n      this.updatedChart()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang='less' scoped>\r\n.arr-left{\r\n  position: absolute;\r\n  left: 10%;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n  color: white;\r\n}\r\n.arr-right{\r\n  position: absolute;\r\n  right: 10%;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  cursor: pointer;\r\n  color: white;\r\n}\r\n.cat-name{\r\n  position: absolute;\r\n  left: 80%;\r\n  bottom: 20px;\r\n  color: white;\r\n}\r\n</style>\r\n"]}]}