{"remainingRequest":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Trend.vue?vue&type=style&index=0&lang=less%20scoped&","dependencies":[{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Trend.vue","mtime":1616767473941},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js","mtime":1615108060518}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi50aXRsZXsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICBsZWZ0OiAyMHB4Ow0KICB0b3A6IDIwcHg7DQogIHotaW5kZXg6IDEwOw0KICBjb2xvcjogd2hpdGU7DQogIC50aXRsZS1pY29uew0KICAgIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KICAgIGN1cnNvcjpwb2luDQogIH0NCn0NCg=="},{"version":3,"sources":["Trend.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Trend.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"com-container\">\r\n      <div class=\"title\">\r\n        <span>我是标题</span>\r\n        <span class=\"iconfont title-icon\">&#xe6eb;</span>\r\n        <div class=\"select-con\">\r\n          <div class=\"select-item\">\r\n            我是1\r\n          </div>\r\n          <div class=\"select-item\">\r\n            我是2\r\n          </div>\r\n          <div class=\"select-item\">\r\n            我是3\r\n          </div>\r\n        </div>\r\n      </div>\r\n        <div class=\"com-chart\" ref=\"trend_ref\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data () {\r\n    return {\r\n      chartInstance: null,\r\n      allData: null\r\n    }\r\n  },\r\n  mounted () {\r\n    this.initChart()\r\n    this.getData()\r\n    window.addEventListener('resize', this.screenAdapter)\r\n    this.screenAdapter()\r\n  },\r\n  destroyed () {\r\n    window.removeEventListener('resize', this.screenAdapter)\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      this.chartInstance = this.$echarts.init(this.$refs.trend_ref, 'chalk')\r\n      const initOption = {\r\n        grid: {\r\n          letf: '3%',\r\n          top: '35%',\r\n          right: '4%',\r\n          bottom: '1%',\r\n          containLabel: true\r\n        },\r\n        // 工具提示\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        // 图例\r\n        legend: {\r\n          left: 20,\r\n          top: '15%',\r\n          icon: 'circle'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          // 无缝\r\n          boundary: false\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        }\r\n      }\r\n      this.chartInstance.setOption(initOption)\r\n    },\r\n    async getData () {\r\n      // await this.$http.get()\r\n      // 对allData进行赋值\r\n      const { data: ret } = await this.$http.get('trend')\r\n      // console.log(ret)\r\n      this.allData = ret\r\n      this.upadteChart()\r\n    },\r\n    upadteChart () {\r\n      // 半透明的颜色值\r\n      const colorArr1 = [\r\n        'rgba(11, 168, 44, 0.5)',\r\n        'rgba(44, 110, 255, 0.5)',\r\n        'rgba(22, 242, 217, 0.5)',\r\n        'rgba(254, 33, 30, 0.5)',\r\n        'rgba(250, 105, 0, 0.5)'\r\n      ]\r\n      // 全透明的颜色值\r\n      const colorArr2 = [\r\n        'rgba(11, 168, 44, 0)',\r\n        'rgba(44, 110, 255, 0)',\r\n        'rgba(22, 242, 217, 0)',\r\n        'rgba(254, 33, 30, 0)',\r\n        'rgba(250, 105, 0, 0)'\r\n      ]\r\n\r\n      // 处理数据\r\n      // 类目轴的数据\r\n      const timeArr = this.allData.common.month\r\n      // y轴的数据series下的数据\r\n      const valueArr = this.allData.map.data\r\n      const seriesArr = valueArr.map((item, index) => {\r\n        return {\r\n          name: item.name,\r\n          type: 'line',\r\n          data: item.data,\r\n          stack: 'map',\r\n          areaStyle: {\r\n            color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              // 百分之0 的颜色值\r\n              {\r\n                offset: 0,\r\n                color: colorArr1[index]\r\n              },\r\n              // 百分之百的颜色值\r\n              {\r\n                offset: 1,\r\n                color: colorArr2[index]\r\n              }\r\n            ])\r\n          }\r\n        }\r\n      })\r\n      // 图例的数据\r\n      const legenArr = valueArr.map(item => {\r\n        return item.name\r\n      })\r\n      const dataOption = {\r\n        xAxis: {\r\n          data: timeArr\r\n        },\r\n        legend: {\r\n          data: legenArr\r\n        },\r\n        series: seriesArr\r\n      }\r\n      this.chartInstance.setOption(dataOption)\r\n    },\r\n    screenAdapter () {\r\n      const adapterOption = {}\r\n      this.chartInstance.setOption(adapterOption)\r\n      this.chartInstance.resize()\r\n    }\r\n\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style lang=\"less scoped\">\r\n.title{\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 20px;\r\n  z-index: 10;\r\n  color: white;\r\n  .title-icon{\r\n    margin-left: 10px;\r\n    cursor:poin\r\n  }\r\n}\r\n</style>\r\n"]}]}