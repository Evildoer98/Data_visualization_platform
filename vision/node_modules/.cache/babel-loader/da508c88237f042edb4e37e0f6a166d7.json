{"remainingRequest":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\src\\components\\Seller.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\src\\components\\Seller.vue","mtime":1624006327466},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\babel-loader\\lib\\index.js","mtime":1615108034142},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\vue-loader\\lib\\index.js","mtime":1615108060518}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvMTIxMzAvRGVza3RvcC9cdTc1MzVcdTU1NDZcdTVCOUVcdTY1RjZcdTc2RDFcdTYzQTdcdTVFNzNcdTUzRjAvdmlzaW9uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydEluc3RhbmNlOiBudWxsLAogICAgICAvLyBjaGFydHPlrp7kvovlr7nosaEKICAgICAgYWxsRGF0YTogW10sCiAgICAgIC8vIOacjeWKoeWZqOi/lOWbnueahOaVsOaNrgogICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgLy8g5b2T5YmN5pi+56S655qE6aG15pWwCiAgICAgIHRvdGFsUGFnZTogMCwKICAgICAgLy8g5LiA5YWx5aSa5bCR6aG1CiAgICAgIHRpbWVJZDogbnVsbCAvLyDlrprml7blmajnmoTmoIfor4YKCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKFsndGhlbWUnXSkpLAogIHdhdGNoOiB7CiAgICB0aGVtZTogZnVuY3Rpb24gdGhlbWUoKSB7CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5kaXNwb3NlKCk7CiAgICAgIHRoaXMuaW5pdENoYXJ0KCk7CiAgICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpOwogICAgICB0aGlzLnVwZGF0ZWRDaGFydCgpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8vIOWcqOe7hOS7tuWIm+W7uuWujOaIkOS5i+WQju+8jOi/m+ihjOWbnuiwg+WHveaVsOeahOazqOWGjAogICAgdGhpcy4kc29ja2V0LnJlZ2lzdGVyQ2FsbEJhY2soJ3NlbGxlckRhdGEnLCB0aGlzLmdldERhdGEpOwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuaW5pdENoYXJ0KCk7IC8vIHRoaXMuZ2V0RGF0ZSgpCgogICAgdGhpcy4kc29ja2V0LnNlbmQoewogICAgICBhY3Rpb246ICdnZXREYXRhJywKICAgICAgc29ja2V0VHlwZTogJ3NlbGxlckRhdGEnLAogICAgICBjaGFyTmFtZTogJ3NlbGxlcicsCiAgICAgIHZhbHVlOiAnJwogICAgfSk7CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKTsgLy8g5Zyo6aG16Z2i5Yqg6L295a6M5oiQ55qE5pe25YCZ77yM5Li75Yqo6L+b6KGM5bGP5bmV55qE6YCC6YWNCgogICAgdGhpcy5zY3JlZW5BZGFwdGVyKCk7CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lSWQpOwogICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuc2NyZWVuQWRhcHRlcik7CiAgICB0aGlzLiRzb2NrZXQudW5SZWdpc3RlckNhbGxCYWNrKCdzZWxsZXJEYXRhJyk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDliJ3lp4vljJZlY2hhcnRzaW5zdGFuY2Xlr7nosaEKICAgIGluaXRDaGFydDogZnVuY3Rpb24gaW5pdENoYXJ0KCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5jaGFydEluc3RhbmNlID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMuc2VsbGVyX3JlZiwgdGhpcy50aGVtZSk7IC8vIOWvueWbvuihqOWIneWni+WMlumFjee9rueahOaOp+WItgoKICAgICAgdmFyIGluaXRPcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHQ6ICfilIMg5ZWG5a626ZSA5ZSu57uf6K6hJywKICAgICAgICAgIGxlZnQ6IDIwLAogICAgICAgICAgdG9wOiAyMAogICAgICAgIH0sCiAgICAgICAgZ3JpZDogewogICAgICAgICAgdG9wOiAnMjAlJywKICAgICAgICAgIGxlZnQ6ICczJScsCiAgICAgICAgICByaWdodDogJzYlJywKICAgICAgICAgIGJvdHRvbTogJzMlJywKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZSAvLyDot53nprvmmK/ljIXlkKvlnZDmoIfovbTkuIrnmoTmloflrZcKCiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICAgIH0sCiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScKICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgejogMCwKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICcjMkQzNDQzJwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICB0eXBlOiAnYmFyJywKICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIHBvc2l0b246ICdyaWdodCcsCiAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgIGNvbG9yOiAnd2hpdGUnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgLy8g5oyH5piO6aKc6Imy5riQ5Y+Y55qE5pa55ZCRCiAgICAgICAgICAgIC8vIOaMh+aYjuS4jeWQjOeZvuWIhuavlOS5i+S4i+minOiJsueahOWAvAogICAgICAgICAgICBjb2xvcjogbmV3IHRoaXMuJGVjaGFydHMuZ3JhcGhpYy5MaW5lYXJHcmFkaWVudCgwLCAwLCAxLCAwLCBbLy8g55m+5YiG5LmLMOeKtuaAgeS4i+eahOminOiJsuWAvAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgb2Zmc2V0OiAwLAogICAgICAgICAgICAgIGNvbG9yOiAnIzUwNTJFRScKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgIG9mZnNldDogMSwKICAgICAgICAgICAgICBjb2xvcjogJyNBQjZFRTUnCiAgICAgICAgICAgIH1dKQogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oaW5pdE9wdGlvbik7IC8vIOWvueWbvuihqOWvueixoei/m+ihjOm8oOagh+S6i+S7tueahOebkeWQrAoKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLm9uKCdtb3VzZW92ZXInLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgY2xlYXJJbnRlcnZhbChfdGhpcy50aW1lSWQpOwogICAgICB9KTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLm9uKCdtb3VzZW91dCcsIGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpcy5zdGFydEludGVydmFsKCk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIOiOt+WPluacjeWKoeWZqOeahOaVsOaNrgogICAgLy8gYXN5bmMgZ2V0RGF0ZSAoKSB7CiAgICBnZXREYXRhOiBmdW5jdGlvbiBnZXREYXRhKHJldCkgewogICAgICAvLyBodHRwOi8vMTI3LjAuMC4xLzg4ODgvYXBpL3NlbGxlcgogICAgICAvLyBjb25zdCB7IGRhdGE6IHJlcyB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoJ3NlbGxlcicpCiAgICAgIC8vIGNvbnNvbGUubG9nKHJlcykKICAgICAgdGhpcy5hbGxEYXRhID0gcmV0OwogICAgICB0aGlzLmFsbERhdGEuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHJldHVybiBhLnZhbHVlIC0gYi52YWx1ZTsKICAgICAgfSk7IC8vIOavj+S6lOS4quWFg+e0oOaYvuekuuS4gOmhtQoKICAgICAgdGhpcy50b3RhbFBhZ2UgPSB0aGlzLmFsbERhdGEubGVuZ3RoICUgNSA9PT0gMCA/IHRoaXMuYWxsRGF0YS5sZW5ndGggLyA1IDogdGhpcy5hbGxEYXRhLmxlbmd0aCAvIDUgKyAxOwogICAgICB0aGlzLnVwZGF0ZWRDaGFydCgpOyAvLyDlkK/liqjlrprml7blmagKCiAgICAgIHRoaXMuc3RhcnRJbnRlcnZhbCgpOwogICAgfSwKICAgIC8vIOabtOaWsOWbvuihqAogICAgdXBkYXRlZENoYXJ0OiBmdW5jdGlvbiB1cGRhdGVkQ2hhcnQoKSB7CiAgICAgIHZhciBzdGFydCA9ICh0aGlzLmN1cnJlbnRQYWdlIC0gMSkgKiA1OyAvLyAwCgogICAgICB2YXIgZW5kID0gdGhpcy5jdXJyZW50UGFnZSAqIDU7IC8vIDUKCiAgICAgIHZhciBzaG93RGF0YSA9IHRoaXMuYWxsRGF0YS5zbGljZShzdGFydCwgZW5kKTsgLy8g5aSE55CG5pWw5o2u5bm25LiU5pu05paw55WM6Z2i5Zu+6KGoCgogICAgICB2YXIgc2VsbGVyTmFtZXMgPSBzaG93RGF0YS5tYXAoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5uYW1lOwogICAgICB9KTsKICAgICAgdmFyIHNlbGxlclZhbHVlcyA9IHNob3dEYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLnZhbHVlOwogICAgICB9KTsKICAgICAgdmFyIGRhdGFPcHRpb24gPSB7CiAgICAgICAgeUF4aXM6IHsKICAgICAgICAgIGRhdGE6IHNlbGxlck5hbWVzCiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBkYXRhOiBzZWxsZXJWYWx1ZXMKICAgICAgICB9XQogICAgICB9OwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uuc2V0T3B0aW9uKGRhdGFPcHRpb24pOwogICAgfSwKICAgIHN0YXJ0SW50ZXJ2YWw6IGZ1bmN0aW9uIHN0YXJ0SW50ZXJ2YWwoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMudGltZUlkKSB7CiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVJZCk7CiAgICAgIH0KCiAgICAgIHRoaXMudGltZUlkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzMi5jdXJyZW50UGFnZSsrOwoKICAgICAgICBpZiAoX3RoaXMyLmN1cnJlbnRQYWdlID4gX3RoaXMyLnRvdGFsUGFnZSkgewogICAgICAgICAgX3RoaXMyLmN1cnJlbnRQYWdlID0gMTsKICAgICAgICB9CgogICAgICAgIF90aGlzMi51cGRhdGVkQ2hhcnQoKTsKICAgICAgfSwgMzAwMCk7CiAgICB9LAogICAgLy8g5ZKM5YiG6L6o546H5aSn5bCP55qE6YWN572uCiAgICBzY3JlZW5BZGFwdGVyOiBmdW5jdGlvbiBzY3JlZW5BZGFwdGVyKCkgewogICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLiRyZWZzLnNlbGxlcl9yZWYub2Zmc2V0V2lkdGgpOwogICAgICB2YXIgdGl0bGVGb250U2l6ZSA9IHRoaXMuJHJlZnMuc2VsbGVyX3JlZi5vZmZzZXRXaWR0aCAvIDEwMCAqIDMuNjsKICAgICAgdmFyIGFkYXB0ZXJPcHRpb24gPSB7CiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBmb250U2l6ZTogdGl0bGVGb250U2l6ZQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICB3aWR0aDogdGl0bGVGb250U2l6ZQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICBiYXJXaWR0aDogdGl0bGVGb250U2l6ZSwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICBiYXJCb3JkZXJSYWRpdXM6IFswLCB0aXRsZUZvbnRTaXplIC8gMiwgdGl0bGVGb250U2l6ZSAvIDIsIDBdCiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihhZGFwdGVyT3B0aW9uKTsgLy8gICDmiYvliqjnmoTosIPnlKjlm77ooajlr7nosaHnmoQgcmVzaXplIOaJjeiDveS6p+eUn+aViOaenAoKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnJlc2l6ZSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Seller.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <!-- 商家销售统计的横向柱状图 -->\r\n    <div class=\"com-container\">\r\n        <div class=\"com-chart\" ref=\"seller_ref\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n  data () {\r\n    return {\r\n      chartInstance: null, // charts实例对象\r\n      allData: [], // 服务器返回的数据\r\n      currentPage: 1, // 当前显示的页数\r\n      totalPage: 0, // 一共多少页\r\n      timeId: null // 定时器的标识\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['theme'])\r\n  },\r\n  watch: {\r\n    theme () {\r\n      this.chartInstance.dispose()\r\n      this.initChart()\r\n      this.screenAdapter()\r\n      this.updatedChart()\r\n    }\r\n  },\r\n  created () {\r\n    // 在组件创建完成之后，进行回调函数的注册\r\n    this.$socket.registerCallBack('sellerData', this.getData)\r\n  },\r\n  mounted () {\r\n    this.initChart()\r\n    // this.getDate()\r\n    this.$socket.send({\r\n      action: 'getData',\r\n      socketType: 'sellerData',\r\n      charName: 'seller',\r\n      value: ''\r\n    })\r\n    window.addEventListener('resize', this.screenAdapter)\r\n    // 在页面加载完成的时候，主动进行屏幕的适配\r\n    this.screenAdapter()\r\n  },\r\n  destroyed () {\r\n    clearInterval(this.timeId)\r\n    window.removeEventListener('resize', this.screenAdapter)\r\n    this.$socket.unRegisterCallBack('sellerData')\r\n  },\r\n  methods: {\r\n    // 初始化echartsinstance对象\r\n    initChart () {\r\n      this.chartInstance = this.$echarts.init(this.$refs.seller_ref, this.theme)\r\n      // 对图表初始化配置的控制\r\n      const initOption = {\r\n        title: {\r\n          text: '┃ 商家销售统计',\r\n          left: 20,\r\n          top: 20\r\n        },\r\n        grid: {\r\n          top: '20%',\r\n          left: '3%',\r\n          right: '6%',\r\n          bottom: '3%',\r\n          containLabel: true // 距离是包含坐标轴上的文字\r\n        },\r\n        xAxis: {\r\n          type: 'value'\r\n        },\r\n        yAxis: {\r\n          type: 'category'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'line',\r\n            z: 0,\r\n            lineStyle: {\r\n              color: '#2D3443'\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            type: 'bar',\r\n            label: {\r\n              show: true,\r\n              positon: 'right',\r\n              textStyle: {\r\n                color: 'white'\r\n              }\r\n            },\r\n            itemStyle: {\r\n              // 指明颜色渐变的方向\r\n              // 指明不同百分比之下颜色的值\r\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                // 百分之0状态下的颜色值\r\n                {\r\n                  offset: 0,\r\n                  color: '#5052EE'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: '#AB6EE5'\r\n                }\r\n              ])\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(initOption)\r\n      // 对图表对象进行鼠标事件的监听\r\n      this.chartInstance.on('mouseover', () => {\r\n        clearInterval(this.timeId)\r\n      })\r\n      this.chartInstance.on('mouseout', () => {\r\n        this.startInterval()\r\n      })\r\n    },\r\n\r\n    // 获取服务器的数据\r\n    // async getDate () {\r\n    getData (ret) {\r\n      // http://127.0.0.1/8888/api/seller\r\n      // const { data: res } = await this.$http.get('seller')\r\n      // console.log(res)\r\n      this.allData = ret\r\n      this.allData.sort((a, b) => {\r\n        return a.value - b.value\r\n      })\r\n      // 每五个元素显示一页\r\n      this.totalPage = this.allData.length % 5 === 0 ? this.allData.length / 5 : this.allData.length / 5 + 1\r\n      this.updatedChart()\r\n      // 启动定时器\r\n      this.startInterval()\r\n    },\r\n\r\n    // 更新图表\r\n    updatedChart () {\r\n      const start = (this.currentPage - 1) * 5 // 0\r\n      const end = this.currentPage * 5 // 5\r\n      const showData = this.allData.slice(start, end)\r\n      // 处理数据并且更新界面图表\r\n      const sellerNames = showData.map((item) => {\r\n        return item.name\r\n      })\r\n      const sellerValues = showData.map((item) => {\r\n        return item.value\r\n      })\r\n      const dataOption = {\r\n        yAxis: {\r\n          data: sellerNames\r\n        },\r\n        series: [\r\n          {\r\n            data: sellerValues\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(dataOption)\r\n    },\r\n    startInterval () {\r\n      if (this.timeId) {\r\n        clearInterval(this.timeId)\r\n      }\r\n      this.timeId = setInterval(() => {\r\n        this.currentPage++\r\n        if (this.currentPage > this.totalPage) {\r\n          this.currentPage = 1\r\n        }\r\n        this.updatedChart()\r\n      }, 3000)\r\n    },\r\n    // 和分辨率大小的配置\r\n    screenAdapter () {\r\n      // console.log(this.$refs.seller_ref.offsetWidth);\r\n      const titleFontSize = this.$refs.seller_ref.offsetWidth / 100 * 3.6\r\n      const adapterOption = {\r\n        title: {\r\n\r\n          textStyle: {\r\n            fontSize: titleFontSize\r\n          }\r\n        },\r\n        tooltip: {\r\n          axisPointer: {\r\n            type: 'line',\r\n            lineStyle: {\r\n              width: titleFontSize\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            barWidth: titleFontSize,\r\n            itemStyle: {\r\n              barBorderRadius: [0, titleFontSize / 2, titleFontSize / 2, 0]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(adapterOption)\r\n      //   手动的调用图表对象的 resize 才能产生效果\r\n      this.chartInstance.resize()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components"}]}