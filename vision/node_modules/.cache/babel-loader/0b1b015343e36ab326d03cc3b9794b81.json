{"remainingRequest":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Seller.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\src\\components\\Seller.vue","mtime":1616858168026},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\babel-loader\\lib\\index.js","mtime":1615108034142},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\项目\\vision\\node_modules\\vue-loader\\lib\\index.js","mtime":1615108060518}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvMTIxMzAvRGVza3RvcC9cdTk4NzlcdTc2RUUvdmlzaW9uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwU3RhdGUgfSBmcm9tICd2dWV4JzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydEluc3RhbmNlOiBudWxsLAogICAgICAvLyBjaGFydHPlrp7kvovlr7nosaEKICAgICAgYWxsRGF0YTogW10sCiAgICAgIC8vIOacjeWKoeWZqOi/lOWbnueahOaVsOaNrgogICAgICBjdXJyZW50UGFnZTogMSwKICAgICAgLy8g5b2T5YmN5pi+56S655qE6aG15pWwCiAgICAgIHRvdGFsUGFnZTogMCwKICAgICAgLy8g5LiA5YWx5aSa5bCR6aG1CiAgICAgIHRpbWVJZDogbnVsbCAvLyDlrprml7blmajnmoTmoIfor4YKCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKFsndGhlbWUnXSkpLAogIHdhdGNoOiB7CiAgICB0aGVtZTogZnVuY3Rpb24gdGhlbWUoKSB7CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5kaXNwb3NlKCk7CiAgICAgIHRoaXMuaW5pdENoYXJ0KCk7CiAgICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpOwogICAgICB0aGlzLnVwZGF0ZUNoYXJ0KCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgLy8g5Zyo57uE5Lu25Yib5bu65a6M5oiQ5LmL5ZCO77yM6L+b6KGM5Zue6LCD5Ye95pWw55qE5rOo5YaMCiAgICB0aGlzLiRzb2NrZXQucmVnaXN0ZXJDYWxsQmFjaygnc2VsbGVyRGF0YScsIHRoaXMuZ2V0RGF0YSk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0Q2hhcnQoKTsgLy8gdGhpcy5nZXREYXRlKCkKCiAgICB0aGlzLiRzb2NrZXQuc2VuZCh7CiAgICAgIGFjdGlvbjogJ2dldERhdGEnLAogICAgICBzb2NrZXRUeXBlOiAnc2VsbGVyRGF0YScsCiAgICAgIGNoYXJOYW1lOiAnc2VsbGVyJywKICAgICAgdmFsdWU6ICcnCiAgICB9KTsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpOyAvLyDlnKjpobXpnaLliqDovb3lrozmiJDnmoTml7blgJnvvIzkuLvliqjov5vooYzlsY/luZXnmoTpgILphY0KCiAgICB0aGlzLnNjcmVlbkFkYXB0ZXIoKTsKICB9LAogIGRlc3Ryb3llZDogZnVuY3Rpb24gZGVzdHJveWVkKCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVJZCk7CiAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcigncmVzaXplJywgdGhpcy5zY3JlZW5BZGFwdGVyKTsKICAgIHRoaXMuJHNvY2tldC51blJlZ2lzdGVyQ2FsbEJhY2soJ3NlbGxlckRhdGEnKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIOWIneWni+WMlmVjaGFydHNpbnN0YW5jZeWvueixoQogICAgaW5pdENoYXJ0OiBmdW5jdGlvbiBpbml0Q2hhcnQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2UgPSB0aGlzLiRlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5zZWxsZXJfcmVmLCB0aGlzLnRoZW1lKTsgLy8g5a+55Zu+6KGo5Yid5aeL5YyW6YWN572u55qE5o6n5Yi2CgogICAgICB2YXIgaW5pdE9wdGlvbiA9IHsKICAgICAgICB0aXRsZTogewogICAgICAgICAgdGV4dDogJ+KUgyDllYblrrbplIDllK7nu5/orqEnLAogICAgICAgICAgbGVmdDogMjAsCiAgICAgICAgICB0b3A6IDIwCiAgICAgICAgfSwKICAgICAgICBncmlkOiB7CiAgICAgICAgICB0b3A6ICcyMCUnLAogICAgICAgICAgbGVmdDogJzMlJywKICAgICAgICAgIHJpZ2h0OiAnNiUnLAogICAgICAgICAgYm90dG9tOiAnMyUnLAogICAgICAgICAgY29udGFpbkxhYmVsOiB0cnVlIC8vIOi3neemu+aYr+WMheWQq+WdkOagh+i9tOS4iueahOaWh+WtlwoKICAgICAgICB9LAogICAgICAgIHhBeGlzOiB7CiAgICAgICAgICB0eXBlOiAndmFsdWUnCiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JwogICAgICAgIH0sCiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICB6OiAwLAogICAgICAgICAgICBsaW5lU3R5bGU6IHsKICAgICAgICAgICAgICBjb2xvcjogJyMyRDM0NDMnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIHR5cGU6ICdiYXInLAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgc2hvdzogdHJ1ZSwKICAgICAgICAgICAgcG9zaXRvbjogJ3JpZ2h0JywKICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgY29sb3I6ICd3aGl0ZScKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGl0ZW1TdHlsZTogewogICAgICAgICAgICAvLyDmjIfmmI7popzoibLmuJDlj5jnmoTmlrnlkJEKICAgICAgICAgICAgLy8g5oyH5piO5LiN5ZCM55m+5YiG5q+U5LmL5LiL6aKc6Imy55qE5YC8CiAgICAgICAgICAgIGNvbG9yOiBuZXcgdGhpcy4kZWNoYXJ0cy5ncmFwaGljLkxpbmVhckdyYWRpZW50KDAsIDAsIDEsIDAsIFsvLyDnmb7liIbkuYsw54q25oCB5LiL55qE6aKc6Imy5YC8CiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBvZmZzZXQ6IDAsCiAgICAgICAgICAgICAgY29sb3I6ICcjNTA1MkVFJwogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgIGNvbG9yOiAnI0FCNkVFNScKICAgICAgICAgICAgfV0pCiAgICAgICAgICB9CiAgICAgICAgfV0KICAgICAgfTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihpbml0T3B0aW9uKTsgLy8g5a+55Zu+6KGo5a+56LGh6L+b6KGM6byg5qCH5LqL5Lu255qE55uR5ZCsCgogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uub24oJ21vdXNlb3ZlcicsIGZ1bmN0aW9uICgpIHsKICAgICAgICBjbGVhckludGVydmFsKF90aGlzLnRpbWVJZCk7CiAgICAgIH0pOwogICAgICB0aGlzLmNoYXJ0SW5zdGFuY2Uub24oJ21vdXNlb3V0JywgZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzLnN0YXJ0SW50ZXJ2YWwoKTsKICAgICAgfSk7CiAgICB9LAogICAgLy8g6I635Y+W5pyN5Yqh5Zmo55qE5pWw5o2uCiAgICAvLyBhc3luYyBnZXREYXRlICgpIHsKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEocmV0KSB7CiAgICAgIC8vIGh0dHA6Ly8xMjcuMC4wLjEvODg4OC9hcGkvc2VsbGVyCiAgICAgIC8vIGNvbnN0IHsgZGF0YTogcmVzIH0gPSBhd2FpdCB0aGlzLiRodHRwLmdldCgnc2VsbGVyJykKICAgICAgLy8gY29uc29sZS5sb2cocmVzKQogICAgICB0aGlzLmFsbERhdGEgPSByZXQ7CiAgICAgIHRoaXMuYWxsRGF0YS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgcmV0dXJuIGEudmFsdWUgLSBiLnZhbHVlOwogICAgICB9KTsgLy8g5q+P5LqU5Liq5YWD57Sg5pi+56S65LiA6aG1CgogICAgICB0aGlzLnRvdGFsUGFnZSA9IHRoaXMuYWxsRGF0YS5sZW5ndGggJSA1ID09PSAwID8gdGhpcy5hbGxEYXRhLmxlbmd0aCAvIDUgOiB0aGlzLmFsbERhdGEubGVuZ3RoIC8gNSArIDE7CiAgICAgIHRoaXMudXBkYXRlQ2hhcnQoKTsgLy8g5ZCv5Yqo5a6a5pe25ZmoCgogICAgICB0aGlzLnN0YXJ0SW50ZXJ2YWwoKTsKICAgIH0sCiAgICAvLyDmm7TmlrDlm77ooagKICAgIHVwZGF0ZUNoYXJ0OiBmdW5jdGlvbiB1cGRhdGVDaGFydCgpIHsKICAgICAgdmFyIHN0YXJ0ID0gKHRoaXMuY3VycmVudFBhZ2UgLSAxKSAqIDU7IC8vIDAKCiAgICAgIHZhciBlbmQgPSB0aGlzLmN1cnJlbnRQYWdlICogNTsgLy8gNQoKICAgICAgdmFyIHNob3dEYXRhID0gdGhpcy5hbGxEYXRhLnNsaWNlKHN0YXJ0LCBlbmQpOyAvLyDlpITnkIbmlbDmja7lubbkuJTmm7TmlrDnlYzpnaLlm77ooagKCiAgICAgIHZhciBzZWxsZXJOYW1lcyA9IHNob3dEYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLm5hbWU7CiAgICAgIH0pOwogICAgICB2YXIgc2VsbGVyVmFsdWVzID0gc2hvd0RhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0udmFsdWU7CiAgICAgIH0pOwogICAgICB2YXIgZGF0YU9wdGlvbiA9IHsKICAgICAgICB5QXhpczogewogICAgICAgICAgZGF0YTogc2VsbGVyTmFtZXMKICAgICAgICB9LAogICAgICAgIHNlcmllczogW3sKICAgICAgICAgIGRhdGE6IHNlbGxlclZhbHVlcwogICAgICAgIH1dCiAgICAgIH07CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oZGF0YU9wdGlvbik7CiAgICB9LAogICAgc3RhcnRJbnRlcnZhbDogZnVuY3Rpb24gc3RhcnRJbnRlcnZhbCgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICBpZiAodGhpcy50aW1lSWQpIHsKICAgICAgICBjbGVhckludGVydmFsKHRoaXMudGltZUlkKTsKICAgICAgfQoKICAgICAgdGhpcy50aW1lSWQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMyLmN1cnJlbnRQYWdlKys7CgogICAgICAgIGlmIChfdGhpczIuY3VycmVudFBhZ2UgPiBfdGhpczIudG90YWxQYWdlKSB7CiAgICAgICAgICBfdGhpczIuY3VycmVudFBhZ2UgPSAxOwogICAgICAgIH0KCiAgICAgICAgX3RoaXMyLnVwZGF0ZUNoYXJ0KCk7CiAgICAgIH0sIDMwMDApOwogICAgfSwKICAgIC8vIOWSjOWIhui+qOeOh+Wkp+Wwj+eahOmFjee9rgogICAgc2NyZWVuQWRhcHRlcjogZnVuY3Rpb24gc2NyZWVuQWRhcHRlcigpIHsKICAgICAgLy8gY29uc29sZS5sb2codGhpcy4kcmVmcy5zZWxsZXJfcmVmLm9mZnNldFdpZHRoKTsKICAgICAgdmFyIHRpdGxlRm9udFNpemUgPSB0aGlzLiRyZWZzLnNlbGxlcl9yZWYub2Zmc2V0V2lkdGggLyAxMDAgKiAzLjY7CiAgICAgIHZhciBhZGFwdGVyT3B0aW9uID0gewogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgZm9udFNpemU6IHRpdGxlRm9udFNpemUKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgIGF4aXNQb2ludGVyOiB7CiAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgbGluZVN0eWxlOiB7CiAgICAgICAgICAgICAgd2lkdGg6IHRpdGxlRm9udFNpemUKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgYmFyV2lkdGg6IHRpdGxlRm9udFNpemUsCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgYmFyQm9yZGVyUmFkaXVzOiBbMCwgdGl0bGVGb250U2l6ZSAvIDIsIHRpdGxlRm9udFNpemUgLyAyLCAwXQogICAgICAgICAgfQogICAgICAgIH1dCiAgICAgIH07CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5zZXRPcHRpb24oYWRhcHRlck9wdGlvbik7IC8vICAg5omL5Yqo55qE6LCD55So5Zu+6KGo5a+56LGh55qEIHJlc2l6ZSDmiY3og73kuqfnlJ/mlYjmnpwKCiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5yZXNpemUoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Seller.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- 商家销售统计的横向柱状图 -->\r\n\r\n<template>\r\n    <div class=\"com-container\">\r\n        <div class=\"com-chart\" ref=\"seller_ref\">\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n  data () {\r\n    return {\r\n      chartInstance: null, // charts实例对象\r\n      allData: [], // 服务器返回的数据\r\n      currentPage: 1, // 当前显示的页数\r\n      totalPage: 0, // 一共多少页\r\n      timeId: null // 定时器的标识\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['theme'])\r\n  },\r\n  watch: {\r\n    theme () {\r\n      this.chartInstance.dispose()\r\n      this.initChart()\r\n      this.screenAdapter()\r\n      this.updateChart()\r\n    }\r\n  },\r\n  created () {\r\n    // 在组件创建完成之后，进行回调函数的注册\r\n    this.$socket.registerCallBack('sellerData', this.getData)\r\n  },\r\n  mounted () {\r\n    this.initChart()\r\n    // this.getDate()\r\n    this.$socket.send({\r\n      action: 'getData',\r\n      socketType: 'sellerData',\r\n      charName: 'seller',\r\n      value: ''\r\n    })\r\n    window.addEventListener('resize', this.screenAdapter)\r\n    // 在页面加载完成的时候，主动进行屏幕的适配\r\n    this.screenAdapter()\r\n  },\r\n  destroyed () {\r\n    clearInterval(this.timeId)\r\n    window.removeEventListener('resize', this.screenAdapter)\r\n    this.$socket.unRegisterCallBack('sellerData')\r\n  },\r\n  methods: {\r\n    // 初始化echartsinstance对象\r\n    initChart () {\r\n      this.chartInstance = this.$echarts.init(this.$refs.seller_ref, this.theme)\r\n      // 对图表初始化配置的控制\r\n      const initOption = {\r\n        title: {\r\n          text: '┃ 商家销售统计',\r\n          left: 20,\r\n          top: 20\r\n        },\r\n        grid: {\r\n          top: '20%',\r\n          left: '3%',\r\n          right: '6%',\r\n          bottom: '3%',\r\n          containLabel: true // 距离是包含坐标轴上的文字\r\n        },\r\n        xAxis: {\r\n          type: 'value'\r\n        },\r\n        yAxis: {\r\n          type: 'category'\r\n        },\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'line',\r\n            z: 0,\r\n            lineStyle: {\r\n              color: '#2D3443'\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            type: 'bar',\r\n            label: {\r\n              show: true,\r\n              positon: 'right',\r\n              textStyle: {\r\n                color: 'white'\r\n              }\r\n            },\r\n            itemStyle: {\r\n              // 指明颜色渐变的方向\r\n              // 指明不同百分比之下颜色的值\r\n              color: new this.$echarts.graphic.LinearGradient(0, 0, 1, 0, [\r\n                // 百分之0状态下的颜色值\r\n                {\r\n                  offset: 0,\r\n                  color: '#5052EE'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: '#AB6EE5'\r\n                }\r\n              ])\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(initOption)\r\n      // 对图表对象进行鼠标事件的监听\r\n      this.chartInstance.on('mouseover', () => {\r\n        clearInterval(this.timeId)\r\n      })\r\n      this.chartInstance.on('mouseout', () => {\r\n        this.startInterval()\r\n      })\r\n    },\r\n\r\n    // 获取服务器的数据\r\n    // async getDate () {\r\n    getData (ret) {\r\n      // http://127.0.0.1/8888/api/seller\r\n      // const { data: res } = await this.$http.get('seller')\r\n      // console.log(res)\r\n      this.allData = ret\r\n      this.allData.sort((a, b) => {\r\n        return a.value - b.value\r\n      })\r\n      // 每五个元素显示一页\r\n      this.totalPage = this.allData.length % 5 === 0 ? this.allData.length / 5 : this.allData.length / 5 + 1\r\n      this.updateChart()\r\n      // 启动定时器\r\n      this.startInterval()\r\n    },\r\n\r\n    // 更新图表\r\n    updateChart () {\r\n      const start = (this.currentPage - 1) * 5 // 0\r\n      const end = this.currentPage * 5 // 5\r\n      const showData = this.allData.slice(start, end)\r\n      // 处理数据并且更新界面图表\r\n      const sellerNames = showData.map((item) => {\r\n        return item.name\r\n      })\r\n      const sellerValues = showData.map((item) => {\r\n        return item.value\r\n      })\r\n      const dataOption = {\r\n        yAxis: {\r\n          data: sellerNames\r\n        },\r\n        series: [\r\n          {\r\n            data: sellerValues\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(dataOption)\r\n    },\r\n    startInterval () {\r\n      if (this.timeId) {\r\n        clearInterval(this.timeId)\r\n      }\r\n      this.timeId = setInterval(() => {\r\n        this.currentPage++\r\n        if (this.currentPage > this.totalPage) {\r\n          this.currentPage = 1\r\n        }\r\n        this.updateChart()\r\n      }, 3000)\r\n    },\r\n    // 和分辨率大小的配置\r\n    screenAdapter () {\r\n      // console.log(this.$refs.seller_ref.offsetWidth);\r\n      const titleFontSize = this.$refs.seller_ref.offsetWidth / 100 * 3.6\r\n      const adapterOption = {\r\n        title: {\r\n\r\n          textStyle: {\r\n            fontSize: titleFontSize\r\n          }\r\n        },\r\n        tooltip: {\r\n          axisPointer: {\r\n            type: 'line',\r\n            lineStyle: {\r\n              width: titleFontSize\r\n            }\r\n          }\r\n        },\r\n        series: [\r\n          {\r\n            barWidth: titleFontSize,\r\n            itemStyle: {\r\n              barBorderRadius: [0, titleFontSize / 2, titleFontSize / 2, 0]\r\n            }\r\n          }\r\n        ]\r\n      }\r\n      this.chartInstance.setOption(adapterOption)\r\n      //   手动的调用图表对象的 resize 才能产生效果\r\n      this.chartInstance.resize()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/components"}]}