{"remainingRequest":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\src\\components\\Trend.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\src\\components\\Trend.vue","mtime":1624006352258},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\babel-loader\\lib\\index.js","mtime":1615108034142},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1615108034129},{"path":"C:\\Users\\12130\\Desktop\\电商实时监控平台\\vision\\node_modules\\vue-loader\\lib\\index.js","mtime":1615108060518}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzovVXNlcnMvMTIxMzAvRGVza3RvcC9cdTc1MzVcdTU1NDZcdTVCOUVcdTY1RjZcdTc2RDFcdTYzQTdcdTVFNzNcdTUzRjAvdmlzaW9uL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IG1hcFN0YXRlIH0gZnJvbSAndnVleCc7CmltcG9ydCB7IGdldFRoZW1lVmFsdWUgfSBmcm9tICdAL3V0aWxzL3RoZW1lX3V0aWxzJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydEluc3RhbmNlOiBudWxsLAogICAgICBhbGxEYXRhOiBudWxsLAogICAgICBzaG93Q2hvaWNlOiBmYWxzZSwKICAgICAgLy8g5piv5ZCm5pi+56S65Y+v6YCJ6aG5CiAgICAgIGNob2ljZVR5cGU6ICdtYXAnLAogICAgICAvLyDmmL7npLrmlbDmja7nsbvlnosKICAgICAgdGl0bGVGb250U2l6ZTogMCAvLyDmjIfmmI7moIfpopjnmoTlrZfkvZPlpKflsI8KCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIC8vIOWcqOe7hOS7tuWIm+W7uuWujOaIkOS5i+WQju+8jOi/m+ihjOWbnuiwg+WHveaVsOeahOazqOWGjAogICAgdGhpcy4kc29ja2V0LnJlZ2lzdGVyQ2FsbEJhY2soJ3RyZW5kRGF0YScsIHRoaXMuZ2V0RGF0YSk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0Q2hhcnQoKTsgLy8gdGhpcy5nZXREYXRhKCkKICAgIC8vIOWPkemAgeaVsOaNrue7meacjeWKoeWZqO+8jOWRiuivieacjeWKoeWZqO+8jOaIkeeOsOWcqOmcgOimgeaVsOaNrgoKICAgIHRoaXMuJHNvY2tldC5zZW5kKHsKICAgICAgYWN0aW9uOiAnZ2V0RGF0YScsCiAgICAgIHNvY2tldFR5cGU6ICd0cmVuZERhdGEnLAogICAgICBjaGFyTmFtZTogJ3RyZW5kJywKICAgICAgdmFsdWU6ICcnCiAgICB9KTsKICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpOwogICAgdGhpcy5zY3JlZW5BZGFwdGVyKCk7CiAgfSwKICBkZXN0cm95ZWQ6IGZ1bmN0aW9uIGRlc3Ryb3llZCgpIHsKICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNjcmVlbkFkYXB0ZXIpOyAvLyDlnKjnu4Tku7bplIDmr4HnmoTml7blgJnvvIzov5vooYzlm57osIPlh73mlbDnmoTlj5bmtogKCiAgICB0aGlzLiRzb2NrZXQudW5SZWdpc3RlckNhbGxCYWNrKCd0cmVuZERhdGEnKTsKICB9LAogIHdhdGNoOiB7CiAgICB0aGVtZTogZnVuY3Rpb24gdGhlbWUoKSB7CiAgICAgIHRoaXMuY2hhcnRJbnN0YW5jZS5kaXNwb3NlKCk7CiAgICAgIHRoaXMuaW5pdENoYXJ0KCk7CiAgICAgIHRoaXMuc2NyZWVuQWRhcHRlcigpOwogICAgICB0aGlzLnVwZGF0ZWRDaGFydCgpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoWyd0aGVtZSddKSksIHt9LCB7CiAgICBzZWxlY3RUeXBlczogZnVuY3Rpb24gc2VsZWN0VHlwZXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAoIXRoaXMuYWxsRGF0YSkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfSBlbHNlIHsKICAgICAgICAvLyDpmpDol4/lt7Lnu4/mmL7npLrnmoTmoIfpopgKICAgICAgICByZXR1cm4gdGhpcy5hbGxEYXRhLnR5cGUuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbS5rZXkgIT09IF90aGlzLmNob2ljZVR5cGU7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBzaG93VGl0bGU6IGZ1bmN0aW9uIHNob3dUaXRsZSgpIHsKICAgICAgaWYgKCF0aGlzLmFsbERhdGEpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIHRoaXMuYWxsRGF0YVt0aGlzLmNob2ljZVR5cGVdLnRpdGxlOwogICAgICB9CiAgICB9LAogICAgY29tU3R5bGU6IGZ1bmN0aW9uIGNvbVN0eWxlKCkgewogICAgICByZXR1cm4gewogICAgICAgIGZvbnRTaXplOiB0aGlzLnRpdGxlRm9udFNpemUgKyAncHgnLAogICAgICAgIGNvbG9yOiBnZXRUaGVtZVZhbHVlKHRoaXMudGhlbWUpLnRpdGxlQ29sb3IKICAgICAgfTsKICAgIH0sCiAgICBtYXJnaW5TdHlsZTogZnVuY3Rpb24gbWFyZ2luU3R5bGUoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgbWFyZ2luTGVmdDogdGhpcy50aXRsZUZvbnRTaXplICsgJ3B4JywKICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGdldFRoZW1lVmFsdWUodGhpcy50aGVtZSkuYmFja2dyb3VuZENvbG9yLAogICAgICAgIGNvbG9yOiBnZXRUaGVtZVZhbHVlKHRoaXMudGhlbWUpLnRpdGxlQ29sb3IKICAgICAgfTsKICAgIH0KICB9KSwKICBtZXRob2RzOiB7CiAgICBpbml0Q2hhcnQ6IGZ1bmN0aW9uIGluaXRDaGFydCgpIHsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlID0gdGhpcy4kZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMudHJlbmRfcmVmLCB0aGlzLnRoZW1lKTsKICAgICAgdmFyIGluaXRPcHRpb24gPSB7CiAgICAgICAgZ3JpZDogewogICAgICAgICAgbGV0ZjogJzMlJywKICAgICAgICAgIHRvcDogJzM1JScsCiAgICAgICAgICByaWdodDogJzQlJywKICAgICAgICAgIGJvdHRvbTogJzElJywKICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgLy8g5bel5YW35o+Q56S6CiAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnCiAgICAgICAgfSwKICAgICAgICAvLyDlm77kvosKICAgICAgICBsZWdlbmQ6IHsKICAgICAgICAgIGxlZnQ6IDIwLAogICAgICAgICAgdG9wOiAnMTUlJywKICAgICAgICAgIGljb246ICdjaXJjbGUnCiAgICAgICAgfSwKICAgICAgICB4QXhpczogewogICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgIC8vIOaXoOe8nQogICAgICAgICAgYm91bmRhcnk6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICB5QXhpczogewogICAgICAgICAgdHlwZTogJ3ZhbHVlJwogICAgICAgIH0KICAgICAgfTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihpbml0T3B0aW9uKTsKICAgIH0sCiAgICAvLyByZXQg5bCx5piv5pyN5Yqh56uv5Y+R6YCB57uZ5a6i5oi356uv55qE5Zu+6KGo55qE5pWw5o2uCiAgICAvLyBhc3luYyBnZXREYXRhIChyZXQpIHsKICAgIGdldERhdGE6IGZ1bmN0aW9uIGdldERhdGEocmV0KSB7CiAgICAgIC8vIGF3YWl0IHRoaXMuJGh0dHAuZ2V0KCkKICAgICAgLy8g5a+5YWxsRGF0Yei/m+ihjOi1i+WAvAogICAgICAvLyBjb25zdCB7IGRhdGE6IHJldCB9ID0gYXdhaXQgdGhpcy4kaHR0cC5nZXQoJ3RyZW5kJykKICAgICAgLy8gY29uc29sZS5sb2cocmV0KQogICAgICB0aGlzLmFsbERhdGEgPSByZXQ7IC8vIGNvbnNvbGUubG9nKHJldCkKCiAgICAgIHRoaXMudXBkYXRlZENoYXJ0KCk7CiAgICB9LAogICAgdXBkYXRlZENoYXJ0OiBmdW5jdGlvbiB1cGRhdGVkQ2hhcnQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgLy8g5Y2K6YCP5piO55qE6aKc6Imy5YC8CiAgICAgIHZhciBjb2xvckFycjEgPSBbJ3JnYmEoMTEsIDE2OCwgNDQsIDAuNSknLCAncmdiYSg0NCwgMTEwLCAyNTUsIDAuNSknLCAncmdiYSgyMiwgMjQyLCAyMTcsIDAuNSknLCAncmdiYSgyNTQsIDMzLCAzMCwgMC41KScsICdyZ2JhKDI1MCwgMTA1LCAwLCAwLjUpJ107IC8vIOWFqOmAj+aYjueahOminOiJsuWAvAoKICAgICAgdmFyIGNvbG9yQXJyMiA9IFsncmdiYSgxMSwgMTY4LCA0NCwgMCknLCAncmdiYSg0NCwgMTEwLCAyNTUsIDApJywgJ3JnYmEoMjIsIDI0MiwgMjE3LCAwKScsICdyZ2JhKDI1NCwgMzMsIDMwLCAwKScsICdyZ2JhKDI1MCwgMTA1LCAwLCAwKSddOyAvLyDlpITnkIbmlbDmja4KICAgICAgLy8g57G755uu6L2055qE5pWw5o2uCgogICAgICB2YXIgdGltZUFyciA9IHRoaXMuYWxsRGF0YS5jb21tb24ubW9udGg7IC8vIHnovbTnmoTmlbDmja5zZXJpZXPkuIvnmoTmlbDmja4KCiAgICAgIHZhciB2YWx1ZUFyciA9IHRoaXMuYWxsRGF0YVt0aGlzLmNob2ljZVR5cGVdLmRhdGE7CiAgICAgIHZhciBzZXJpZXNBcnIgPSB2YWx1ZUFyci5tYXAoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSwKICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgIGRhdGE6IGl0ZW0uZGF0YSwKICAgICAgICAgIHN0YWNrOiBfdGhpczIuY2hvaWNlVHlwZSwKICAgICAgICAgIGFyZWFTdHlsZTogewogICAgICAgICAgICBjb2xvcjogbmV3IF90aGlzMi4kZWNoYXJ0cy5ncmFwaGljLkxpbmVhckdyYWRpZW50KDAsIDAsIDAsIDEsIFsvLyDnmb7liIbkuYswIOeahOminOiJsuWAvAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgb2Zmc2V0OiAwLAogICAgICAgICAgICAgIGNvbG9yOiBjb2xvckFycjFbaW5kZXhdCiAgICAgICAgICAgIH0sIC8vIOeZvuWIhuS5i+eZvueahOminOiJsuWAvAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgb2Zmc2V0OiAxLAogICAgICAgICAgICAgIGNvbG9yOiBjb2xvckFycjJbaW5kZXhdCiAgICAgICAgICAgIH1dKQogICAgICAgICAgfQogICAgICAgIH07CiAgICAgIH0pOyAvLyDlm77kvovnmoTmlbDmja4KCiAgICAgIHZhciBsZWdlbkFyciA9IHZhbHVlQXJyLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLm5hbWU7CiAgICAgIH0pOwogICAgICB2YXIgZGF0YU9wdGlvbiA9IHsKICAgICAgICB4QXhpczogewogICAgICAgICAgZGF0YTogdGltZUFycgogICAgICAgIH0sCiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBkYXRhOiBsZWdlbkFycgogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBzZXJpZXNBcnIKICAgICAgfTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihkYXRhT3B0aW9uKTsKICAgIH0sCiAgICBzY3JlZW5BZGFwdGVyOiBmdW5jdGlvbiBzY3JlZW5BZGFwdGVyKCkgewogICAgICB0aGlzLnRpdGxlRm9udFNpemUgPSB0aGlzLiRyZWZzLnRyZW5kX3JlZi5vZmZzZXRXaWR0aCAvIDEwMCAqIDMuNjsKICAgICAgdmFyIGFkYXB0ZXJPcHRpb24gPSB7CiAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICBpdGVtV2lkdGg6IHRoaXMudGl0bGVGb250U2l6ZSwKICAgICAgICAgIGl0ZW1IZWlnaHQ6IHRoaXMudGl0bGVGb250U2l6ZSwKICAgICAgICAgIGl0ZW1HYXA6IHRoaXMudGl0bGVGb250U2l6ZSwKICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICBmb250U2l6ZTogdGhpcy50aXRsZUZvbnRTaXplIC8gMgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnNldE9wdGlvbihhZGFwdGVyT3B0aW9uKTsKICAgICAgdGhpcy5jaGFydEluc3RhbmNlLnJlc2l6ZSgpOwogICAgfSwKICAgIGhhbmRsZVNlbGVjdDogZnVuY3Rpb24gaGFuZGxlU2VsZWN0KGN1cnJlbnRUeXBlKSB7CiAgICAgIHRoaXMuY2hvaWNlVHlwZSA9IGN1cnJlbnRUeXBlOwogICAgICB0aGlzLnVwZGF0ZWRDaGFydCgpOwogICAgICB0aGlzLnNob3dDaG9pY2UgPSBmYWxzZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["Trend.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <!-- 销量趋势图表 -->\r\n    <div class=\"com-container\">\r\n      <div class=\"title\" :style=\"comStyle\">\r\n        <span>{{'┃ ' + showTitle}}</span>\r\n        <span class=\"iconfont title-icon\" :style=\"comStyle\" @click=\"showChoice = !showChoice\">&#xe6eb;</span>\r\n        <div class=\"select-con\" v-show=\"showChoice\" :style=\"marginStyle\">\r\n          <div class=\"select-item\" v-for=\"item in selectTypes\" :key = \"item.key\" @click=\"handleSelect(item.key)\">\r\n            {{ item.text }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"com-chart\" ref=\"trend_ref\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport { getThemeValue } from '@/utils/theme_utils'\r\n\r\nexport default {\r\n  data () {\r\n    return {\r\n      chartInstance: null,\r\n      allData: null,\r\n      showChoice: false, // 是否显示可选项\r\n      choiceType: 'map', // 显示数据类型\r\n      titleFontSize: 0 // 指明标题的字体大小\r\n    }\r\n  },\r\n  created () {\r\n    // 在组件创建完成之后，进行回调函数的注册\r\n    this.$socket.registerCallBack('trendData', this.getData)\r\n  },\r\n  mounted () {\r\n    this.initChart()\r\n    // this.getData()\r\n    // 发送数据给服务器，告诉服务器，我现在需要数据\r\n    this.$socket.send({\r\n      action: 'getData',\r\n      socketType: 'trendData',\r\n      charName: 'trend',\r\n      value: ''\r\n    })\r\n    window.addEventListener('resize', this.screenAdapter)\r\n    this.screenAdapter()\r\n  },\r\n  destroyed () {\r\n    window.removeEventListener('resize', this.screenAdapter)\r\n    // 在组件销毁的时候，进行回调函数的取消\r\n    this.$socket.unRegisterCallBack('trendData')\r\n  },\r\n  watch: {\r\n    theme () {\r\n      this.chartInstance.dispose()\r\n      this.initChart()\r\n      this.screenAdapter()\r\n      this.updatedChart()\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState(['theme']),\r\n    selectTypes () {\r\n      if (!this.allData) {\r\n        return []\r\n      } else {\r\n        // 隐藏已经显示的标题\r\n        return this.allData.type.filter(item => {\r\n          return item.key !== this.choiceType\r\n        })\r\n      }\r\n    },\r\n    showTitle () {\r\n      if (!this.allData) {\r\n        return ''\r\n      } else {\r\n        return this.allData[this.choiceType].title\r\n      }\r\n    },\r\n    comStyle () {\r\n      return {\r\n        fontSize: this.titleFontSize + 'px',\r\n        color: getThemeValue(this.theme).titleColor\r\n      }\r\n    },\r\n    marginStyle () {\r\n      return {\r\n        marginLeft: this.titleFontSize + 'px',\r\n        backgroundColor: getThemeValue(this.theme).backgroundColor,\r\n        color: getThemeValue(this.theme).titleColor\r\n      }\r\n    }\r\n\r\n  },\r\n  methods: {\r\n    initChart () {\r\n      this.chartInstance = this.$echarts.init(this.$refs.trend_ref, this.theme)\r\n      const initOption = {\r\n        grid: {\r\n          letf: '3%',\r\n          top: '35%',\r\n          right: '4%',\r\n          bottom: '1%',\r\n          containLabel: true\r\n        },\r\n        // 工具提示\r\n        tooltip: {\r\n          trigger: 'axis'\r\n        },\r\n        // 图例\r\n        legend: {\r\n          left: 20,\r\n          top: '15%',\r\n          icon: 'circle'\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          // 无缝\r\n          boundary: false\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        }\r\n      }\r\n      this.chartInstance.setOption(initOption)\r\n    },\r\n    // ret 就是服务端发送给客户端的图表的数据\r\n    // async getData (ret) {\r\n    getData (ret) {\r\n      // await this.$http.get()\r\n      // 对allData进行赋值\r\n      // const { data: ret } = await this.$http.get('trend')\r\n      // console.log(ret)\r\n      this.allData = ret\r\n      // console.log(ret)\r\n      this.updatedChart()\r\n    },\r\n    updatedChart () {\r\n      // 半透明的颜色值\r\n      const colorArr1 = [\r\n        'rgba(11, 168, 44, 0.5)',\r\n        'rgba(44, 110, 255, 0.5)',\r\n        'rgba(22, 242, 217, 0.5)',\r\n        'rgba(254, 33, 30, 0.5)',\r\n        'rgba(250, 105, 0, 0.5)'\r\n      ]\r\n      // 全透明的颜色值\r\n      const colorArr2 = [\r\n        'rgba(11, 168, 44, 0)',\r\n        'rgba(44, 110, 255, 0)',\r\n        'rgba(22, 242, 217, 0)',\r\n        'rgba(254, 33, 30, 0)',\r\n        'rgba(250, 105, 0, 0)'\r\n      ]\r\n\r\n      // 处理数据\r\n      // 类目轴的数据\r\n      const timeArr = this.allData.common.month\r\n      // y轴的数据series下的数据\r\n      const valueArr = this.allData[this.choiceType].data\r\n      const seriesArr = valueArr.map((item, index) => {\r\n        return {\r\n          name: item.name,\r\n          type: 'line',\r\n          data: item.data,\r\n          stack: this.choiceType,\r\n          areaStyle: {\r\n            color: new this.$echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n              // 百分之0 的颜色值\r\n              {\r\n                offset: 0,\r\n                color: colorArr1[index]\r\n              },\r\n              // 百分之百的颜色值\r\n              {\r\n                offset: 1,\r\n                color: colorArr2[index]\r\n              }\r\n            ])\r\n          }\r\n        }\r\n      })\r\n      // 图例的数据\r\n      const legenArr = valueArr.map(item => {\r\n        return item.name\r\n      })\r\n      const dataOption = {\r\n        xAxis: {\r\n          data: timeArr\r\n        },\r\n        legend: {\r\n          data: legenArr\r\n        },\r\n        series: seriesArr\r\n      }\r\n      this.chartInstance.setOption(dataOption)\r\n    },\r\n    screenAdapter () {\r\n      this.titleFontSize = this.$refs.trend_ref.offsetWidth / 100 * 3.6\r\n      const adapterOption = {\r\n        legend: {\r\n          itemWidth: this.titleFontSize,\r\n          itemHeight: this.titleFontSize,\r\n          itemGap: this.titleFontSize,\r\n          textStyle: {\r\n            fontSize: this.titleFontSize / 2\r\n          }\r\n        }\r\n      }\r\n      this.chartInstance.setOption(adapterOption)\r\n      this.chartInstance.resize()\r\n    },\r\n    handleSelect (currentType) {\r\n      this.choiceType = currentType\r\n      this.updatedChart()\r\n      this.showChoice = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.title{\r\n  position: absolute;\r\n  left: 20px;\r\n  top: 20px;\r\n  z-index: 10;\r\n  color: white;\r\n}\r\n.title-icon{\r\n    margin-left: 10px;\r\n    cursor:pointer;\r\n  }\r\n.select-con{\r\n  background-color: #222733;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}